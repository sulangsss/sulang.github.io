<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sulang blog</title>
  
  <subtitle>python java android django web</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sulangsss.github.io/"/>
  <updated>2018-12-15T06:50:31.436Z</updated>
  <id>https://sulangsss.github.io/</id>
  
  <author>
    <name>sulang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kernel Architechture</title>
    <link href="https://sulangsss.github.io/2018/12/15/CS/Kernel/Kernel%20Architecture/"/>
    <id>https://sulangsss.github.io/2018/12/15/CS/Kernel/Kernel Architecture/</id>
    <published>2018-12-15T06:55:03.000Z</published>
    <updated>2018-12-15T06:50:31.436Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Kernel" scheme="https://sulangsss.github.io/categories/Kernel/"/>
    
    
      <category term="Kernel" scheme="https://sulangsss.github.io/tags/Kernel/"/>
    
      <category term="Architechture" scheme="https://sulangsss.github.io/tags/Architechture/"/>
    
      <category term="MonolithicKernel" scheme="https://sulangsss.github.io/tags/MonolithicKernel/"/>
    
      <category term="MicroKernel" scheme="https://sulangsss.github.io/tags/MicroKernel/"/>
    
      <category term="HybridKernel" scheme="https://sulangsss.github.io/tags/HybridKernel/"/>
    
      <category term="ExoKernel" scheme="https://sulangsss.github.io/tags/ExoKernel/"/>
    
      <category term="UniKernel" scheme="https://sulangsss.github.io/tags/UniKernel/"/>
    
      <category term="LibOS" scheme="https://sulangsss.github.io/tags/LibOS/"/>
    
  </entry>
  
  <entry>
    <title>Unikernel</title>
    <link href="https://sulangsss.github.io/2018/12/15/Docker/Unikernel/Unikernel-Introduction/"/>
    <id>https://sulangsss.github.io/2018/12/15/Docker/Unikernel/Unikernel-Introduction/</id>
    <published>2018-12-15T03:55:03.000Z</published>
    <updated>2018-12-15T06:35:11.732Z</updated>
    
    <content type="html"><![CDATA[<h3 id="What-Are-Unikernels"><a href="#What-Are-Unikernels" class="headerlink" title="What Are Unikernels?"></a>What Are Unikernels?</h3><p>Unikernels are specialised, single-address-space machine images constructed by using library operating systems.</p><p>In other words, unikernels are <strong>small, fast, secure virtual machines that lack operating systems</strong>.</p><p>其最大的卖点就是在，没有用户空间与内核空间之分，只有一个连续的地址空间。这样使得 Unikernel 中只能运行一个应用，而且对于运行的应用而言，没有硬件抽象可言，所有的逻辑，包括应用逻辑和操作硬件的逻辑，都在一个地址空间中。</p><p>Unikernel就是一个单一内存空间的内核镜像，其中只能有一个应用在运行，那这样有啥好呢，为啥值得我放弃Linux而用你这么一个看上去像是阉割版的内核呢？好处就在，小，快，安全。</p><p>Unikernel镜像都很小，由MirageOS实现的一个 DNS server 才 184KB，实现的一个 web server 674 KB，小到恐怖的程度。然后就是快，启动很快。因为镜像都很小，所以起停都在毫秒级别，比传统的kernel要快多了。最后是安全，一般来讲，小的东西相对而言比较安全。Unikernel中没有Shell可用，没有密码文件，没有多余的设备驱动，这使得Unikernel更加安全。</p><hr><h4 id="Unikernel架构"><a href="#Unikernel架构" class="headerlink" title="Unikernel架构"></a>Unikernel架构</h4><img src="/2018/12/15/Docker/Unikernel/Unikernel-Introduction/unikernel-architechture.png"><p>Unikernel在整个服务器的架构中取消了操作系统，应用直接运行在hypervisor或者硬件上。试图抹去现代操作系统带来的一些复杂性。因为“通用”的操作系统（就像任何Linux和Windows的发行版），通常会伴随着带来一些对你的应用来说并不需要的驱动、依赖包、服务、等等。</p><hr><h4 id="Unikernel的开发和测试"><a href="#Unikernel的开发和测试" class="headerlink" title="Unikernel的开发和测试"></a>Unikernel的开发和测试</h4><p>Unikernel 在真正实践中，如何开发与测试是一个值得关注的问题。在开发过程中，开发者可以假定自己在传统的操作系统上进行开发，而所有内核相关的功能，暂且由开发机的操作系统提供。</p><p>而在测试环境中，大部分Unikernel的实现会将应用代码与需要的内核模块构建成Unikernel后，再将其跑在一个传统的操作系统上，利用传统操作系统上的工具来测试Unikernel。以Rumprun为例，它可以通过KVM/QEMU来运行一个 Rumprun Unikernel VM，随后用Host OS上的GDB来对其进行调试，</p><blockquote><p>更多关于调试的信息，可以查看<a href="https://news.ycombinator.com/item?id=10954132" target="_blank" rel="noopener">https://news.ycombinator.com/item?id=10954132</a></p></blockquote><p>在发布阶段，这是 Unikernel最简单的事情了。Unikernel最后的产物就是一个kernel image，可以在Hypervisor，Bare Metal等等各种环境上运行。</p><p>所以可以看到，其中Unikernel在软件过程中与传统方式最大的不同就在于调试与测试。而在发布的阶段，传统的方式可能发布的是一个应用，或者一个容器镜像，而Unikernel则是一个高度定制化的kernel。</p><p>目前的Unikernel项目：MirageOS、HaLVM、ClickOS和Rumprun等等。</p><blockquote><p>更多项目: <a href="http://unikernel.org/projects/" target="_blank" rel="noopener">http://unikernel.org/projects/</a></p></blockquote><hr><h3 id="The-Problem-Our-Fat-Insecure-Clouds"><a href="#The-Problem-Our-Fat-Insecure-Clouds" class="headerlink" title="The Problem: Our Fat, Insecure Clouds"></a>The Problem: Our Fat, Insecure Clouds</h3><p>When cloud computing burst on(突然出现) the scene(场景), there were all sorts of(各种各样的) promises made of a grand future. It was said that our compute farms would magically allocate resources to meet the needs of applications.</p><p>Resources would be automatically optimized to do the maximum work possible with the assets available. And compute clouds would leverage assets both in the datacenter and on the Internet, transparently to the end user.</p><p>Emphasis was placed on developing excellent cloud orchestration(编排,调度) engines that could move applications with agility(灵活,敏捷) throughout the cloud. </p><p>That(cloud orchestration engine) was an entirely appropriate(适合的) focus, as the datacenter in the time before the cloud was both immobile and slow to change. Many system administrators could walk blindfolded(vt.蒙住眼睛) through the aisles(通道) of their equipment racks(货架) and point out what each machine did for what department, stating(vt.说明) exactly what software was installed on each server. The placement of workloads on hardware was frequently laborious(费劲地) and static; changing those workloads was a slow, difficult, and arduous(费力的) task, requiring much verification and testing before even the smallest changes were made on production systems.</p><p>The advent(到来) of cloud orchestration software (OpenStack, CloudStack, openNebula, etc.) altered all that—and many of us were very grateful. The ability of these orchestration systems to adapt and change with business needs turned the IT world on its head. A new world ensued(vi.跟着发生), and the promise of the cloud seemed to be fulfilled.</p><hr><h3 id="Security-Is-a-Growing-Problem"><a href="#Security-Is-a-Growing-Problem" class="headerlink" title="Security Is a Growing Problem"></a>Security Is a Growing Problem</h3><p>However, as the cloud era(时代) dawned(vi.出现), it became evident that a good orchestration engine alone is simply not enough to make a truly effective cloud. </p><p>A quick review of industry headlines(新闻提要) over the past few years yields report after report of security breaches(breach vt.破坏, n.违反,缺口) in some of the most impressive organizations. </p><p>Major retailers(零售商), credit card companies, even federal governments(联邦政府) have reported successful attacks on their infrastructure, including possible loss of sensitive data. For example, in May 2016, the Wall Street Journal ran a story about banks in three different countries that had been recently hacked to the tune of $90 million in losses. A quick review of the graphic representation of major attacks in the past decade will take your breath away. Even the US Pentagon(五角大楼) was reportedly hacked in the summer of (夏天的时候)2011. It is no longer unusual to receive a letter in the mail stating that your credit card is being reissued(vt.重新发行) because credit card data was compromised(vt.危害) by malicious(恶意的) hackers.</p><blockquote><p>to the tune of: 达…之多<br>take your breath away: 令人屏息</p></blockquote><hr><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote><p>official site: <a href="http://unikernel.org/" target="_blank" rel="noopener">http://unikernel.org/</a><br><a href="https://www.oreilly.com/library/view/unikernels/9781492042815/" target="_blank" rel="noopener">https://www.oreilly.com/library/view/unikernels/9781492042815/</a><br><a href="https://www.oreilly.com/library/view/unikernels/9781492042815/ch01.html" target="_blank" rel="noopener">https://www.oreilly.com/library/view/unikernels/9781492042815/ch01.html</a><br><a href="http://dockone.io/article/1379" target="_blank" rel="noopener">http://dockone.io/article/1379</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;What-Are-Unikernels&quot;&gt;&lt;a href=&quot;#What-Are-Unikernels&quot; class=&quot;headerlink&quot; title=&quot;What Are Unikernels?&quot;&gt;&lt;/a&gt;What Are Unikernels?&lt;/h3&gt;&lt;p&gt;
      
    
    </summary>
    
      <category term="Docker" scheme="https://sulangsss.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://sulangsss.github.io/tags/Docker/"/>
    
      <category term="Kernel" scheme="https://sulangsss.github.io/tags/Kernel/"/>
    
      <category term="Unikernel" scheme="https://sulangsss.github.io/tags/Unikernel/"/>
    
  </entry>
  
  <entry>
    <title>Rust Unit Testing</title>
    <link href="https://sulangsss.github.io/2018/12/14/Rust/Basic/UnitTesting/"/>
    <id>https://sulangsss.github.io/2018/12/14/Rust/Basic/UnitTesting/</id>
    <published>2018-12-14T11:00:03.000Z</published>
    <updated>2018-12-14T17:34:23.546Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><p>add #[test] on the line before <strong>fn</strong>. When you run your tests with the cargo test command, Rust builds a test runner binary that runs the functions annotated with the test attribute and reports on whether each test function passes or fails.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><h4 id="first-unit-test"><a href="#first-unit-test" class="headerlink" title="first unit test"></a>first unit test</h4><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#[cfg(test)]</span></span><br><span class="line"><span class="keyword">mod</span> tests &#123;</span><br><span class="line">    <span class="meta">#[test]</span></span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">it_works</span></span>() &#123;</span><br><span class="line">        <span class="built_in">assert_eq!</span>(<span class="number">2</span> + <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">running 1 <span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span> tests::it_works ... ok</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out</span><br></pre></td></tr></table></figure><h4 id="panic"><a href="#panic" class="headerlink" title="panic"></a>panic</h4><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#[cfg(test)]</span></span><br><span class="line"><span class="keyword">mod</span> tests &#123;</span><br><span class="line">    <span class="meta">#[test]</span></span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">exploration</span></span>() &#123;</span><br><span class="line">        <span class="built_in">assert_eq!</span>(<span class="number">2</span> + <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#[test]</span></span><br><span class="line">    <span class="function"><span class="keyword">fn</span> <span class="title">another</span></span>() &#123;</span><br><span class="line">        <span class="built_in">panic!</span>(<span class="string">"Make this test fail"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Command&quot;&gt;&lt;a href=&quot;#Command&quot; class=&quot;headerlink&quot; title=&quot;Command&quot;&gt;&lt;/a&gt;Command&lt;/h3&gt;&lt;p&gt;add #[test] on the line before &lt;strong&gt;fn&lt;/strong&gt;
      
    
    </summary>
    
      <category term="Rust" scheme="https://sulangsss.github.io/categories/Rust/"/>
    
      <category term="Basic" scheme="https://sulangsss.github.io/categories/Rust/Basic/"/>
    
    
      <category term="Rust" scheme="https://sulangsss.github.io/tags/Rust/"/>
    
      <category term="Primer" scheme="https://sulangsss.github.io/tags/Primer/"/>
    
      <category term="UnitTesting" scheme="https://sulangsss.github.io/tags/UnitTesting/"/>
    
  </entry>
  
  <entry>
    <title>RAID</title>
    <link href="https://sulangsss.github.io/2018/12/14/CS/Disk/RAID/"/>
    <id>https://sulangsss.github.io/2018/12/14/CS/Disk/RAID/</id>
    <published>2018-12-14T10:21:07.000Z</published>
    <updated>2018-12-14T10:45:23.890Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introducation"><a href="#Introducation" class="headerlink" title="Introducation"></a>Introducation</h3><p><strong>背景</strong></p><p>在单机时代，采用单块磁盘进行数据存储和读写的方式，由于寻址和读写的时间消耗，导致I/O性能非常低，且存储容量还会受到限制。另外，单块磁盘极其容易出现物理故障，经常导致数据的丢失。因此大家就在想，有没有一种办法将多块独立的磁盘结合在一起组成一个技术方案，来提高数据的可靠性和I/O性能呢。在这种情况下，RAID技术就应运而生了。</p><p><strong>What’s RAID?</strong></p><p>RAID （ Redundant Array of Independent Disks ）即独立磁盘冗余阵列，简称为「磁盘阵列」，其实就是用多个独立的磁盘组成在一起形成一个大的磁盘系统，从而实现比单块磁盘更好的存储性能和更高的可靠性。</p><h3 id="RAID-Type"><a href="#RAID-Type" class="headerlink" title="RAID Type"></a>RAID Type</h3><ul><li>RAID0</li><li>RAID1</li><li>RAID5</li><li>RAID6</li><li>RAID7</li><li>RAID10</li></ul><p>磁盘阵列其实也分为软阵列 (Software Raid)和硬阵列 (Hardware Raid)，其中Software Raid只能实现RAID0和RAID1</p><hr><h4 id="RAID0"><a href="#RAID0" class="headerlink" title="RAID0"></a>RAID0</h4><p>RAID0 是一种非常简单的的方式，它将多块磁盘组合在一起形成一个大容量的存储。当我们要写数据的时候，会将数据分为N份，以独立的方式实现N块磁盘的读写，那么这N份数据会同时并发的写到磁盘中，因此执行性能非常的高。</p><p>RAID0的读写性能理论上是单块磁盘的N倍（仅限理论，因为实际中磁盘的寻址时间也是性能占用的大头），但RAID0的问题是，它并不提供数据校验或冗余备份，因此一旦某块磁盘损坏了，数据就直接丢失，无法恢复了。因此RAID0就不可能用于高要求的业务中，但可以用在对可靠性要求不高，对读写性能要求高的场景中。</p><hr><h4 id="RAID1"><a href="#RAID1" class="headerlink" title="RAID1"></a>RAID1</h4><p>RAID1 是磁盘阵列中单位成本最高的一种方式。因为它的原理是在往磁盘写数据的时候，将同一份数据无差别的写两份到磁盘，分别写到工作磁盘和镜像磁盘，那么它的实际空间使用率只有50%了，两块磁盘当做一块用，这是一种比较昂贵的方案。</p><p>RAID1其实与RAID0效果刚好相反。RAID1 这种写双份的做法，就给数据做了一个冗余备份。这样的话，任何一块磁盘损坏了，都可以再基于另外一块磁盘去恢复数据，数据的可靠性非常强，但性能就没那么好了。</p><p>RAID5的方式可以说是对RAID3进行了改进。</p><p>RAID5模式中，不再需要用单独的磁盘写校验码了。它把校验码信息分布到各个磁盘上。例如，总共有N块磁盘，那么会将要写入的数据分成N份，并发的写入到N块磁盘中，同时还将数据的校验码信息也写入到这N块磁盘中（数据与对应的校验码信息必须得分开存储在不同的磁盘上）。一旦某一块磁盘损坏了，就可以用剩下的数据和对应的奇偶校验码信息去恢复损坏的数据。</p><hr><h4 id="RAID5"><a href="#RAID5" class="headerlink" title="RAID5"></a>RAID5</h4><p>在说RAID5前，我们先了解一下RAID3，因为RAID5是在RAID3基础上进行改进的。</p><p>RAID3的方式是：将数据按照RAID0的形式，分成多份同时写入多块磁盘，但是还会另外再留出一块磁盘用于写「奇偶校验码」。例如总共有N块磁盘，那么就会让其中的N-1块用来并发的写数据，第N块磁盘用记录校验码数据。一旦某一块磁盘坏掉了，就可以利用其它的N-1块磁盘去恢复数据。</p><p>但是由于第N块磁盘是校验码磁盘，因此有任何数据的写入都会要去更新这块磁盘，导致这块磁盘的读写是最频繁的，也就非常的容易损坏。</p><p>RAID5的方式，最少需要三块磁盘来组建磁盘阵列，允许最多同时坏一块磁盘。如果有两块磁盘同时损坏了，那数据就无法恢复了。</p><hr><h4 id="RAID6"><a href="#RAID6" class="headerlink" title="RAID6"></a>RAID6</h4><p>RAID6在RAID5的基础上再次改进，引入了<strong>双重校验</strong>的概念。</p><p>RAID6除了每块磁盘上都有同级数据XOR校验区以外，还有针对每个数据块的XOR校验区，这样的话，相当于每个数据块有两个校验保护措施，因此数据的冗余性更高了。但是RAID6的这种设计也带来了很高的复杂度，虽然数据冗余性好，读取的效率也比较高，但是写数据的性能就很差。因此RAID6在实际环境中应用的比较少。</p><hr><h4 id="RAID10"><a href="#RAID10" class="headerlink" title="RAID10"></a>RAID10</h4><p>RAID10兼备了RAID1和RAID0的有优点。首先基于RAID1模式将磁盘分为2份，当要写入数据的时候，将所有的数据在两份磁盘上同时写入，相当于写了双份数据，起到了数据保障的作用。且在每一份磁盘上又会基于RAID0技术讲数据分为N份并发的读写，这样也保障了数据的效率。</p><p>但也可以看出RAID10模式是有一半的磁盘空间用于存储冗余数据的，浪费的很严重，因此用的也不是很多。</p><hr><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/51170719" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/51170719</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Introducation&quot;&gt;&lt;a href=&quot;#Introducation&quot; class=&quot;headerlink&quot; title=&quot;Introducation&quot;&gt;&lt;/a&gt;Introducation&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;背景&lt;/strong&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="Disk" scheme="https://sulangsss.github.io/categories/Disk/"/>
    
    
      <category term="Disk" scheme="https://sulangsss.github.io/tags/Disk/"/>
    
      <category term="RAID" scheme="https://sulangsss.github.io/tags/RAID/"/>
    
  </entry>
  
  <entry>
    <title>Junit Configuration</title>
    <link href="https://sulangsss.github.io/2018/12/14/Java/Junit/JunitConfiguration/"/>
    <id>https://sulangsss.github.io/2018/12/14/Java/Junit/JunitConfiguration/</id>
    <published>2018-12-14T05:17:22.000Z</published>
    <updated>2018-12-14T05:17:27.348Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Junit-5"><a href="#Junit-5" class="headerlink" title="Junit 5"></a>Junit 5</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Junit-5&quot;&gt;&lt;a href=&quot;#Junit-5&quot; class=&quot;headerlink&quot; title=&quot;Junit 5&quot;&gt;&lt;/a&gt;Junit 5&lt;/h3&gt;
      
    
    </summary>
    
      <category term="Java" scheme="https://sulangsss.github.io/categories/Java/"/>
    
      <category term="Junit" scheme="https://sulangsss.github.io/categories/Java/Junit/"/>
    
    
      <category term="Java" scheme="https://sulangsss.github.io/tags/Java/"/>
    
      <category term="Junit" scheme="https://sulangsss.github.io/tags/Junit/"/>
    
      <category term="Configuration" scheme="https://sulangsss.github.io/tags/Configuration/"/>
    
  </entry>
  
  <entry>
    <title>Maven Common Configuration</title>
    <link href="https://sulangsss.github.io/2018/12/14/Java/Maven/CommonConfiguration/"/>
    <id>https://sulangsss.github.io/2018/12/14/Java/Maven/CommonConfiguration/</id>
    <published>2018-12-14T04:15:22.000Z</published>
    <updated>2018-12-14T05:14:30.672Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><h4 id="Exclude"><a href="#Exclude" class="headerlink" title="Exclude"></a>Exclude</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h3><h4 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看maven安装目录</span></span><br><span class="line">mvn -v</span><br></pre></td></tr></table></figure><p>添加Aliyun Repository，sudo vim /usr/local/Cellar/maven/3.5.4/libexec/conf/settings.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>          </span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Dependencies&quot;&gt;&lt;a href=&quot;#Dependencies&quot; class=&quot;headerlink&quot; title=&quot;Dependencies&quot;&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;&lt;h4 id=&quot;Exclude&quot;&gt;&lt;a href=&quot;#Exclud
      
    
    </summary>
    
      <category term="Java" scheme="https://sulangsss.github.io/categories/Java/"/>
    
      <category term="Maven" scheme="https://sulangsss.github.io/categories/Java/Maven/"/>
    
    
      <category term="Java" scheme="https://sulangsss.github.io/tags/Java/"/>
    
      <category term="Configuration" scheme="https://sulangsss.github.io/tags/Configuration/"/>
    
      <category term="Maven" scheme="https://sulangsss.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Maven Error</title>
    <link href="https://sulangsss.github.io/2018/12/14/Java/Maven/MavenError/"/>
    <id>https://sulangsss.github.io/2018/12/14/Java/Maven/MavenError/</id>
    <published>2018-12-14T04:01:22.000Z</published>
    <updated>2018-12-14T03:21:25.261Z</updated>
    
    <content type="html"><![CDATA[<h3 id="was-cached-in-the-local-repository-resolution-will-not-be-reattempted-until-the-update-interval-of-nexus-has-elapsed-or-updates-are-forced"><a href="#was-cached-in-the-local-repository-resolution-will-not-be-reattempted-until-the-update-interval-of-nexus-has-elapsed-or-updates-are-forced" class="headerlink" title="was cached in the local repository, resolution will not be reattempted until the update interval of nexus has elapsed or updates are forced"></a>was cached in the local repository, resolution will not be reattempted until the update interval of nexus has elapsed or updates are forced</h3><p>Solution: 删除本地jar包，rebuild</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -U clean install</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;was-cached-in-the-local-repository-resolution-will-not-be-reattempted-until-the-update-interval-of-nexus-has-elapsed-or-updates-are-
      
    
    </summary>
    
      <category term="Java" scheme="https://sulangsss.github.io/categories/Java/"/>
    
      <category term="Maven" scheme="https://sulangsss.github.io/categories/Java/Maven/"/>
    
    
      <category term="Error" scheme="https://sulangsss.github.io/tags/Error/"/>
    
      <category term="Java" scheme="https://sulangsss.github.io/tags/Java/"/>
    
      <category term="Maven" scheme="https://sulangsss.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>CPU Cache</title>
    <link href="https://sulangsss.github.io/2018/12/14/CS/CPU/Cache/"/>
    <id>https://sulangsss.github.io/2018/12/14/CS/CPU/Cache/</id>
    <published>2018-12-13T16:41:07.000Z</published>
    <updated>2018-12-14T02:09:11.959Z</updated>
    
    <content type="html"><![CDATA[<h3 id="What’s-Cache"><a href="#What’s-Cache" class="headerlink" title="What’s Cache"></a>What’s Cache</h3><p>Cache Memory也被称为Cache，是存储器子系统的组成部分，存放着程序经常使用的指令和数据，这就是Cache的传统定义。</p><p>从广义的角度上看，Cache是快设备为了缓解访问慢设备延时的预留的Buffer，从而可以在掩盖访问延时的同时，尽可能地提高数据传输率。</p><p>快和慢是一个相对概念，与微架构(Microarchitecture)中的 L1/L2/L3 Cache相比， DDR内存是一个慢速设备；在磁盘I/O系统中，DDR却是快速设备，在磁盘I/O系统中，仍在使用DDR内存作为磁介质的Cache。在一个微架构中，除了有L1/L2/L3 Cache之外，用于虚实地址转换的各级TLB，MOB( Memory Ordering Buffers)、在指令流水线中的ROB，Register File和BTB等等也是一种Cache。我们这里的Cache，是狭义 Cache，是CPU流水线和主存储器的 L1/L2/L3 Cache。</p><blockquote><p>L2: MLC(Middle Level Cache)<br>L3: LLC(Last Level Cache)</p></blockquote><h3 id="缓存的组织形式"><a href="#缓存的组织形式" class="headerlink" title="缓存的组织形式"></a>缓存的组织形式</h3><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/31422201" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/31422201</a><br><a href="https://decodezp.github.io/2018/11/20/cachesize/" target="_blank" rel="noopener">https://decodezp.github.io/2018/11/20/cachesize/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;What’s-Cache&quot;&gt;&lt;a href=&quot;#What’s-Cache&quot; class=&quot;headerlink&quot; title=&quot;What’s Cache&quot;&gt;&lt;/a&gt;What’s Cache&lt;/h3&gt;&lt;p&gt;Cache Memory也被称为Cache，是存储器子系统的
      
    
    </summary>
    
      <category term="CPU" scheme="https://sulangsss.github.io/categories/CPU/"/>
    
    
      <category term="CPU" scheme="https://sulangsss.github.io/tags/CPU/"/>
    
      <category term="Cache" scheme="https://sulangsss.github.io/tags/Cache/"/>
    
  </entry>
  
  <entry>
    <title>How can you learn and build skills QUICKLY</title>
    <link href="https://sulangsss.github.io/2018/12/13/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%AE%A4%E7%9F%A5/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1%E6%96%B0%E6%8A%80%E6%9C%AF/"/>
    <id>https://sulangsss.github.io/2018/12/13/读书笔记/认知/如何快速掌握新技术/</id>
    <published>2018-12-13T15:24:07.000Z</published>
    <updated>2018-12-13T15:34:49.109Z</updated>
    
    <content type="html"><![CDATA[<h3 id="认知资源"><a href="#认知资源" class="headerlink" title="认知资源"></a>认知资源</h3><p>你是否有想认真掌握一门新技能，但一拿起各类技术书籍、文档，很快就放弃的经历？你又是否在做一些让别人“选择蛋糕”的事情？比如让别人阅读你自己编写的项目文档。</p><p>当你想要快速掌握一项技能的时候，你需要学会管理自己的认知资源。</p><img src="/2018/12/13/读书笔记/认知/如何快速掌握新技术/cognitive-resource-1.jpg"><hr><h3 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h3><img src="/2018/12/13/读书笔记/认知/如何快速掌握新技术/skills-category-1.jpg"><p>将你现在的技能分为三类：</p><ul><li>A - 还没有掌握，但需要掌握的</li><li>B - 经过一定努力可以掌握的</li><li>C - 已经掌握的</li></ul><p>我们的目标其实是如何将AB的技能快速移动到C。在这个过程中我们会遇到两类典型问题：</p><ul><li>没有进步</li><li>耗时太久</li></ul><hr><h4 id="解决”没有进步”"><a href="#解决”没有进步”" class="headerlink" title="解决”没有进步”"></a>解决”没有进步”</h4><p>第一类问题的根本原因在于你的认知资源不足以支撑技能的学习需求。我们不能要求自己有无限的认知资源，在资源极度有限的情况下，仍有两种解决策略：</p><p><strong>第一种，将更多的需要掌握的技能放在A，将精力集中于少量的B类技能。但在日常工作中，需要掌握哪些技能，解决哪些问题，都不是自己可以安排的。对此，我们还有第二种策略。</strong></p><img src="/2018/12/13/读书笔记/认知/如何快速掌握新技术/solution-1.jpg"><hr><p><strong>第二种策略，就是将B中的技能分解为更小的粒度。这种策略，在有限的认知资源的情况下效果等同于一个需要处理多任务并发的CPU，上面运行的程序都采用了更加细粒度的锁机制，带来了程序性能的提升。</strong></p><img src="/2018/12/13/读书笔记/认知/如何快速掌握新技术/solution-2.jpg"><p>那么如何界定分解之后的技能足够“细”？Kathy给出了一个她的评判标准：从完全不会到十分熟练，最多经过3次练习，每次45-90分钟。</p><p>能满足上面的标准就可以认为分解到了合理的粒度。</p><hr><h4 id="解决”耗时太久”"><a href="#解决”耗时太久”" class="headerlink" title="解决”耗时太久”"></a>解决”耗时太久”</h4><p>程序员不但要学习很多技能，还需要快速学习。所以从A开始，我们最好能够绕过B直接到C。</p><img src="/2018/12/13/读书笔记/认知/如何快速掌握新技术/solution-3.jpg"><p>关键点：<strong>高质量的例子</strong></p><p>通过高质量的例子进行学习和模仿，有点类似机器学习一样，不断的进化。</p><p>当要学习某样特殊技术的时候，你是找官方的、正式的、长而无味的文档，还是去找一个精悍的例子？</p><p>当你能找到一个精确的示例来演示如何使用这样技术的时候，你几乎可以“瞬间”掌握这项技术。</p><p>你需要这些示例来让大脑自动地，潜意识地识别其中的模式。但现在的问题是，所有技术里又臭又长的文档很多，但短小精悍的示例很少。</p><p>所以是否可以利用社区的力量，将这些文档转换成一系列高质量的示例库呢？</p><hr><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote><p><a href="https://www.youtube.com/watch?v=FKTxC9pl-WM" target="_blank" rel="noopener">https://www.youtube.com/watch?v=FKTxC9pl-WM</a><br><a href="https://decodezp.github.io/2018/12/12/eng-talk1-fast-learn/#%E5%85%B3%E9%94%AE%E7%9A%84%E7%BC%BA%E5%A4%B1%E2%80%94%E2%80%94%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9A%84%E4%BE%8B%E5%AD%90" target="_blank" rel="noopener">https://decodezp.github.io/2018/12/12/eng-talk1-fast-learn/#%E5%85%B3%E9%94%AE%E7%9A%84%E7%BC%BA%E5%A4%B1%E2%80%94%E2%80%94%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9A%84%E4%BE%8B%E5%AD%90</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;认知资源&quot;&gt;&lt;a href=&quot;#认知资源&quot; class=&quot;headerlink&quot; title=&quot;认知资源&quot;&gt;&lt;/a&gt;认知资源&lt;/h3&gt;&lt;p&gt;你是否有想认真掌握一门新技能，但一拿起各类技术书籍、文档，很快就放弃的经历？你又是否在做一些让别人“选择蛋糕”的事情？比如让
      
    
    </summary>
    
      <category term="读书笔记" scheme="https://sulangsss.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="认知" scheme="https://sulangsss.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%AE%A4%E7%9F%A5/"/>
    
    
      <category term="读书笔记" scheme="https://sulangsss.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="认知" scheme="https://sulangsss.github.io/tags/%E8%AE%A4%E7%9F%A5/"/>
    
      <category term="如何快速掌握新技术" scheme="https://sulangsss.github.io/tags/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1%E6%96%B0%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud Contract Practice</title>
    <link href="https://sulangsss.github.io/2018/12/13/Java/SpringBoot/SpringCloudContract/ContractPractice/"/>
    <id>https://sulangsss.github.io/2018/12/13/Java/SpringBoot/SpringCloudContract/ContractPractice/</id>
    <published>2018-12-13T11:00:22.000Z</published>
    <updated>2018-12-14T10:19:49.166Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CDC-Consumer-Driven-Contract"><a href="#CDC-Consumer-Driven-Contract" class="headerlink" title="CDC(Consumer Driven Contract)"></a>CDC(Consumer Driven Contract)</h3><h3 id="Application-Scenarios"><a href="#Application-Scenarios" class="headerlink" title="Application Scenarios"></a>Application Scenarios</h3><h3 id="Contract-DSL-Domain-Specific-Language"><a href="#Contract-DSL-Domain-Specific-Language" class="headerlink" title="Contract DSL(Domain-Specific Language)"></a>Contract DSL(Domain-Specific Language)</h3><ul><li>Groovy</li><li>YAML</li><li>Json</li></ul><blockquote><p>参考示例:<br><a href="https://github.com/spring-cloud/spring-cloud-contract/tree/master/spring-cloud-contract-tools/spring-cloud-contract-pact" target="_blank" rel="noopener">https://github.com/spring-cloud/spring-cloud-contract/tree/master/spring-cloud-contract-tools/spring-cloud-contract-pact</a><br><a href="https://cloud.spring.io/spring-cloud-contract/multi/multi__contract_dsl.html" target="_blank" rel="noopener">https://cloud.spring.io/spring-cloud-contract/multi/multi__contract_dsl.html</a></p></blockquote><h3 id="Producer"><a href="#Producer" class="headerlink" title="Producer"></a>Producer</h3><h4 id="定义测试Controller"><a href="#定义测试Controller" class="headerlink" title="定义测试Controller"></a>定义测试Controller</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OrderController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> val logger = LogManager.getLogger(OrderController::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line">    @GetMapping("/hello")</span><br><span class="line">    <span class="function">fun <span class="title">hello</span><span class="params">()</span>: ResponseEntity&lt;Any&gt; </span>&#123;</span><br><span class="line">        logger.info(<span class="string">"hello()"</span>)</span><br><span class="line">        val user = User()</span><br><span class="line">        user.name = <span class="string">"hello"</span></span><br><span class="line">        <span class="keyword">return</span> ResponseEntity(user, HttpStatus.OK)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定义测试Controller的Contracts"><a href="#定义测试Controller的Contracts" class="headerlink" title="定义测试Controller的Contracts"></a>定义测试Controller的Contracts</h4><p>在test的Resources下，新建contracts目录，定义一个contract文件，以json格式</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"provider"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Provider"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"consumer"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Consumer"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"interactions"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">      <span class="attr">"request"</span>: &#123;</span><br><span class="line">        <span class="attr">"method"</span>: <span class="string">"GET"</span>,</span><br><span class="line">        <span class="attr">"path"</span>: <span class="string">"/hello"</span>,</span><br><span class="line">        <span class="attr">"body"</span>: &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"hello"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"response"</span>: &#123;</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">"body"</span>: &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"hello"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"metadata"</span>: &#123;</span><br><span class="line">    <span class="attr">"pact-specification"</span>: &#123;</span><br><span class="line">      <span class="attr">"version"</span>: <span class="string">"3.0.0"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"pact-jvm"</span>: &#123;</span><br><span class="line">      <span class="attr">"version"</span>: <span class="string">"3.5.13"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定义测试基类ContractVerifierBase"><a href="#定义测试基类ContractVerifierBase" class="headerlink" title="定义测试基类ContractVerifierBase"></a>定义测试基类ContractVerifierBase</h4><p>通过配置build的插件spring-cloud-contract-maven-plugin使测试用例继承该类进行初始化操作</p><p>在test的com.example.base下，新建ContractVerifierBase.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.restassured.<span class="keyword">module</span>.mockmvc.RestAssuredMockMvc;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.setup.MockMvcBuilders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span>(webEnvironment = SpringBootTest.WebEnvironment.MOCK)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContractVerifierBase</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StandaloneMockMvcBuilder standaloneMockMvcBuilder = MockMvcBuilders.standaloneSetup(</span><br><span class="line">            <span class="keyword">new</span> TestController(),</span><br><span class="line">            <span class="keyword">new</span> TestHelloController()</span><br><span class="line">        );</span><br><span class="line">        RestAssuredMockMvc.standaloneSetup(standaloneMockMvcBuilder);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要特别注意的是，这个ContractVerifierBase只能是.java文件，目前不支持Kotlin</p><h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-contract-stub-runner<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-contract-verifier<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-contract-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-contract.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                 <span class="comment">&lt;!--   配置用例的基类   --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">baseClassForTests</span>&gt;</span>com.example.base<span class="tag">&lt;/<span class="name">baseClassForTests</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;packageWithBaseClasses&gt;com.example.contracts&lt;/packageWithBaseClasses&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-contract-pact<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud-contract.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Maven-spring-cloud-contract-pact-Plugin"><a href="#Maven-spring-cloud-contract-pact-Plugin" class="headerlink" title="Maven spring-cloud-contract-pact Plugin"></a>Maven spring-cloud-contract-pact Plugin</h4><ul><li>packageWithBaseClasses: <strong>Defines a package where all the base classes reside.</strong> This setting takes precedence over baseClassForTests. The convention is such that, if you have a contract under (for example) src/test/resources/contract/foo/bar/baz/ and set the value of the packageWithBaseClasses property to com.example.base, then Spring Cloud Contract Verifier assumes that there is a BarBazBase class under the com.example.base package. In other words, the system takes the last two parts of the package, if they exist, and forms a class with a Base suffix.</li></ul><p><strong>Example</strong></p><p>测试基类目录：/test/com/example/contacts，此时<packagewithbaseclasses>com.example.contracts</packagewithbaseclasses></p><p>Contract路径：/test/resouces/controller/controller_craete_order.json</p><p>生成的Contract测试类 -&gt; ControllerTest</p><p>默认继承的基类 -&gt; ControllerBase</p><h3 id="Contracs-Example"><a href="#Contracs-Example" class="headerlink" title="Contracs Example"></a>Contracs Example</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"provider"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Provider"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"consumer"</span>: &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Consumer"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"interactions"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">      <span class="attr">"request"</span>: &#123;</span><br><span class="line">        <span class="attr">"method"</span>: <span class="string">"PUT"</span>,</span><br><span class="line">        <span class="attr">"path"</span>: <span class="string">"/fraudcheck"</span>,</span><br><span class="line">        <span class="attr">"headers"</span>: &#123;</span><br><span class="line">          <span class="attr">"Content-Type"</span>: <span class="string">"application/vnd.fraud.v1+json"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"body"</span>: &#123;</span><br><span class="line">          <span class="attr">"clientId"</span>: <span class="string">"1234567890"</span>,</span><br><span class="line">          <span class="attr">"loanAmount"</span>: <span class="number">99999</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"generators"</span>: &#123;</span><br><span class="line">          <span class="attr">"body"</span>: &#123;</span><br><span class="line">            <span class="attr">"$.clientId"</span>: &#123;</span><br><span class="line">              <span class="attr">"type"</span>: <span class="string">"Regex"</span>,</span><br><span class="line">              <span class="attr">"regex"</span>: <span class="string">"[0-9]&#123;10&#125;"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"matchingRules"</span>: &#123;</span><br><span class="line">          <span class="attr">"header"</span>: &#123;</span><br><span class="line">            <span class="attr">"Content-Type"</span>: &#123;</span><br><span class="line">              <span class="attr">"matchers"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">"match"</span>: <span class="string">"regex"</span>,</span><br><span class="line">                  <span class="attr">"regex"</span>: <span class="string">"application/vnd\\.fraud\\.v1\\+json.*"</span></span><br><span class="line">                &#125;</span><br><span class="line">              ],</span><br><span class="line">              <span class="attr">"combine"</span>: <span class="string">"AND"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"body"</span>: &#123;</span><br><span class="line">            <span class="attr">"$.clientId"</span>: &#123;</span><br><span class="line">              <span class="attr">"matchers"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">"match"</span>: <span class="string">"regex"</span>,</span><br><span class="line">                  <span class="attr">"regex"</span>: <span class="string">"[0-9]&#123;10&#125;"</span></span><br><span class="line">                &#125;</span><br><span class="line">              ],</span><br><span class="line">              <span class="attr">"combine"</span>: <span class="string">"AND"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"response"</span>: &#123;</span><br><span class="line">        <span class="attr">"status"</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">"headers"</span>: &#123;</span><br><span class="line">          <span class="attr">"Content-Type"</span>: <span class="string">"application/vnd.fraud.v1+json;charset=UTF-8"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"body"</span>: &#123;</span><br><span class="line">          <span class="attr">"fraudCheckStatus"</span>: <span class="string">"FRAUD"</span>,</span><br><span class="line">          <span class="attr">"rejectionReason"</span>: <span class="string">"Amount too high"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"matchingRules"</span>: &#123;</span><br><span class="line">          <span class="attr">"header"</span>: &#123;</span><br><span class="line">            <span class="attr">"Content-Type"</span>: &#123;</span><br><span class="line">              <span class="attr">"matchers"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">"match"</span>: <span class="string">"regex"</span>,</span><br><span class="line">                  <span class="attr">"regex"</span>: <span class="string">"application/vnd\\.fraud\\.v1\\+json.*"</span></span><br><span class="line">                &#125;</span><br><span class="line">              ],</span><br><span class="line">              <span class="attr">"combine"</span>: <span class="string">"AND"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"body"</span>: &#123;</span><br><span class="line">            <span class="attr">"$.fraudCheckStatus"</span>: &#123;</span><br><span class="line">              <span class="attr">"matchers"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">"match"</span>: <span class="string">"regex"</span>,</span><br><span class="line">                  <span class="attr">"regex"</span>: <span class="string">"FRAUD"</span></span><br><span class="line">                &#125;</span><br><span class="line">              ],</span><br><span class="line">              <span class="attr">"combine"</span>: <span class="string">"AND"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"metadata"</span>: &#123;</span><br><span class="line">    <span class="attr">"pact-specification"</span>: &#123;</span><br><span class="line">      <span class="attr">"version"</span>: <span class="string">"3.0.0"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"pact-jvm"</span>: &#123;</span><br><span class="line">      <span class="attr">"version"</span>: <span class="string">"3.5.13"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote><p><a href="https://springframework.guru/using-spring-cloud-contract-for-consumer-driven-contracts/" target="_blank" rel="noopener">https://springframework.guru/using-spring-cloud-contract-for-consumer-driven-contracts/</a><br><a href="https://martinfowler.com/articles/consumerDrivenContracts.html" target="_blank" rel="noopener">https://martinfowler.com/articles/consumerDrivenContracts.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CDC-Consumer-Driven-Contract&quot;&gt;&lt;a href=&quot;#CDC-Consumer-Driven-Contract&quot; class=&quot;headerlink&quot; title=&quot;CDC(Consumer Driven Contract)&quot;&gt;&lt;/a&gt;C
      
    
    </summary>
    
      <category term="Java" scheme="https://sulangsss.github.io/categories/Java/"/>
    
      <category term="SpringBoot" scheme="https://sulangsss.github.io/categories/Java/SpringBoot/"/>
    
    
      <category term="Java" scheme="https://sulangsss.github.io/tags/Java/"/>
    
      <category term="SpringBoot" scheme="https://sulangsss.github.io/tags/SpringBoot/"/>
    
      <category term="Contract" scheme="https://sulangsss.github.io/tags/Contract/"/>
    
      <category term="Practice" scheme="https://sulangsss.github.io/tags/Practice/"/>
    
  </entry>
  
  <entry>
    <title>认识一下CORS(Cross-Origin Resource Sharing)</title>
    <link href="https://sulangsss.github.io/2018/12/13/Network/HTTP/CORS/"/>
    <id>https://sulangsss.github.io/2018/12/13/Network/HTTP/CORS/</id>
    <published>2018-12-13T10:15:18.000Z</published>
    <updated>2018-12-13T11:07:23.562Z</updated>
    
    <content type="html"><![CDATA[<h3 id="What’-CORS-Cross-Origin-Resource-Sharing"><a href="#What’-CORS-Cross-Origin-Resource-Sharing" class="headerlink" title="What’ CORS - Cross-Origin Resource Sharing"></a>What’ CORS - Cross-Origin Resource Sharing</h3><p>Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell a browser to let a web application running at one origin (domain) have permission to access selected resources from a server at a different origin. A web application makes a cross-origin HTTP request when it requests a resource that has a different <strong>origin (domain, protocol, and port)</strong> than its own origin.</p><p>支持CORS请求的浏览器一旦发现ajax请求跨域，会对请求做一些特殊处理，对于已经实现CORS接口的服务端，接受请求，并做出回应。</p><p>有一种情况比较特殊，如果我们发送的跨域请求为“非简单请求”，浏览器会在发出此请求之前首先发送一个请求类型为OPTIONS的“预检请求”，验证请求源是否为服务端允许源，这些对于开发这来说是感觉不到的，由浏览器代理。</p><p>总而言之，客户端不需要对跨域请求做任何特殊处理。</p><h3 id="CORS存在的意义"><a href="#CORS存在的意义" class="headerlink" title="CORS存在的意义"></a>CORS存在的意义</h3><p>为了保证用户信息的安全，所有的浏览器都遵循同源策略。</p><p>凡是发送请求url的协议、域名、端口三者之间任意一与当前页面地址不同，即为跨域(不同源)</p><ul><li>域名(domain)</li><li>协议(protocol)</li><li>端口(porot)</li></ul><hr><p>同源策略的限制：</p><ul><li>无法获取非同源的Cookie、LocalStorage、SessionStorage等</li><li>无法获取非同源的dom</li><li>无法向非同源的服务器发送ajax请求</li></ul><hr><p>CORS的请求Header</p><ul><li>origin：表明预检请求或实际请求的源站URL，总是会带上</li><li>Access-Control-Request-Method：实际请求所使用的HTTP方法告诉服务器</li><li>Access-Control-Request-Headers：将实际请求所携带的首部字段告诉服务器</li></ul><hr><p>CORS的响应Header</p><ul><li>Access-Control-Allow-Origin：这个请求头一般会被服务器端返回，它的值代表了哪些域名你有权可以访问(注：对于携带身份凭证的请求不可使用通配符*)</li><li>Access-Control-Expose-Headers：指定XMLRequest的getResourceHeader可以访问的响应头</li><li>Access-Control-Max-Age：指定preflight请求的结果能够被缓存多久</li><li>Access-Control-Allow-Credentials：是否允许浏览器读取response的内容；</li><li>Access-Control-Allow-Methods：指明实际请求允许所使用的HTTP方法</li><li>Access-Control-Allow-Headers：指明实际请求中允许携带的首部字段</li></ul><hr><h3 id="什么是简单请求？"><a href="#什么是简单请求？" class="headerlink" title="什么是简单请求？"></a>什么是简单请求？</h3><p>请求方法属于以下类型：</p><ul><li>HEAD</li><li>GET</li><li>POST</li></ul><p>Headers不超出以下字段：</p><ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Content-Type: application/x-www-form-urlencoded、 multipart/form-data、text/plain</li><li>DPR</li><li>Downlink</li><li>Save-Data</li><li>Viewport-Width</li><li>Width</li></ul><p>不满足上述要求的在发送正式请求前都要先发送一个预检请求，预检请求以OPTIONS方法发送，浏览器通过请求方法和请求头能够判断是否发送预检请求。</p><blockquote><p>服务器端在处理OPTIONS请求的时候需要注意：需要预检请求时，浏览器会发出两次请求，一次OPTIONS，一次POST。两次都返回了数据。如果服务端逻辑复杂一些，比如去数据库查找数据，从web层、service到数据库这段逻辑就会走两遍，浏览器会两次拿到相同的数据。如果是OPTIONS请求，在设置完跨域请求响应头后就不走后面的逻辑直接返回。</p></blockquote><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><blockquote><p>重点阅读：<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS</a><br><a href="https://zhuanlan.zhihu.com/p/29980092" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/29980092</a><br><a href="https://juejin.im/post/5a7359876fb9a0634a38e389" target="_blank" rel="noopener">https://juejin.im/post/5a7359876fb9a0634a38e389</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;What’-CORS-Cross-Origin-Resource-Sharing&quot;&gt;&lt;a href=&quot;#What’-CORS-Cross-Origin-Resource-Sharing&quot; class=&quot;headerlink&quot; title=&quot;What’ CORS -
      
    
    </summary>
    
      <category term="Network" scheme="https://sulangsss.github.io/categories/Network/"/>
    
      <category term="HTTP" scheme="https://sulangsss.github.io/categories/Network/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://sulangsss.github.io/tags/HTTP/"/>
    
      <category term="Network" scheme="https://sulangsss.github.io/tags/Network/"/>
    
      <category term="CORS" scheme="https://sulangsss.github.io/tags/CORS/"/>
    
  </entry>
  
  <entry>
    <title>Introduce Spring WebFlux</title>
    <link href="https://sulangsss.github.io/2018/12/13/Java/SpringBoot/SpringWebFlux/Introduction/"/>
    <id>https://sulangsss.github.io/2018/12/13/Java/SpringBoot/SpringWebFlux/Introduction/</id>
    <published>2018-12-13T09:46:22.000Z</published>
    <updated>2018-12-13T11:10:08.706Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>Spring WebFlux is supported on Tomcat, Jetty, Servlet 3.1+ containers, as well as on non-Servlet runtimes such as <strong>Netty</strong> and <strong>Undertow</strong>.</p><p><strong>Spring Boot defaults to Netty</strong>, because it is more widely used in the asynchronous, non-blocking space and lets a client and a server share resources.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h3&gt;&lt;p&gt;Spring WebFlux is supported on
      
    
    </summary>
    
      <category term="Java" scheme="https://sulangsss.github.io/categories/Java/"/>
    
      <category term="SpringBoot" scheme="https://sulangsss.github.io/categories/Java/SpringBoot/"/>
    
    
      <category term="Java" scheme="https://sulangsss.github.io/tags/Java/"/>
    
      <category term="Introduce" scheme="https://sulangsss.github.io/tags/Introduce/"/>
    
      <category term="SpringBoot" scheme="https://sulangsss.github.io/tags/SpringBoot/"/>
    
      <category term="WebFlux" scheme="https://sulangsss.github.io/tags/WebFlux/"/>
    
  </entry>
  
  <entry>
    <title>Introduce Undertow</title>
    <link href="https://sulangsss.github.io/2018/12/13/Java/Undertow/Introduction/"/>
    <id>https://sulangsss.github.io/2018/12/13/Java/Undertow/Introduction/</id>
    <published>2018-12-13T09:41:22.000Z</published>
    <updated>2018-12-13T09:45:57.859Z</updated>
    
    <content type="html"><![CDATA[<h3 id="What’s-Undertow"><a href="#What’s-Undertow" class="headerlink" title="What’s Undertow"></a>What’s Undertow</h3><p>Undertow is a flexible performant web server written in java, providing both blocking and non-blocking API’s based on NIO.</p><p>Undertow has a composition based architecture that allows you to build a web server by combining small single purpose handlers. The gives you the flexibility to choose between a full Java EE servlet 4.0 container, or a low level non-blocking handler, to anything in between.</p><p>Undertow is designed to be fully embeddable, with easy to use fluent builder APIs. Undertow’s lifecycle is completely controlled by the embedding application.</p><p>Undertow is sponsored by JBoss and is the default web server in the Wildfly Application Server.</p><blockquote><p><a href="http://undertow.io/" target="_blank" rel="noopener">http://undertow.io/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;What’s-Undertow&quot;&gt;&lt;a href=&quot;#What’s-Undertow&quot; class=&quot;headerlink&quot; title=&quot;What’s Undertow&quot;&gt;&lt;/a&gt;What’s Undertow&lt;/h3&gt;&lt;p&gt;Undertow is a flex
      
    
    </summary>
    
      <category term="Java" scheme="https://sulangsss.github.io/categories/Java/"/>
    
      <category term="Undertow" scheme="https://sulangsss.github.io/categories/Java/Undertow/"/>
    
    
      <category term="Java" scheme="https://sulangsss.github.io/tags/Java/"/>
    
      <category term="Undertow" scheme="https://sulangsss.github.io/tags/Undertow/"/>
    
      <category term="Introduce" scheme="https://sulangsss.github.io/tags/Introduce/"/>
    
  </entry>
  
  <entry>
    <title>Linux awk</title>
    <link href="https://sulangsss.github.io/2018/12/12/Linux/Tools/awk/"/>
    <id>https://sulangsss.github.io/2018/12/12/Linux/Tools/awk/</id>
    <published>2018-12-12T13:23:22.000Z</published>
    <updated>2018-12-12T13:39:57.310Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><h3 id="Application-Scenarios"><a href="#Application-Scenarios" class="headerlink" title="Application Scenarios"></a>Application Scenarios</h3><ul><li>文本处理</li><li>输出格式化的文本报表</li><li>执行算数运算</li><li>执行字符串操作等等</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h3&gt;&lt;h3 id=&quot;Application-Scenarios&quot;&gt;&lt;a
      
    
    </summary>
    
      <category term="Linux" scheme="https://sulangsss.github.io/categories/Linux/"/>
    
      <category term="Tools" scheme="https://sulangsss.github.io/categories/Linux/Tools/"/>
    
    
      <category term="Tools" scheme="https://sulangsss.github.io/tags/Tools/"/>
    
      <category term="Linux" scheme="https://sulangsss.github.io/tags/Linux/"/>
    
      <category term="awk" scheme="https://sulangsss.github.io/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>Linux Startup Program</title>
    <link href="https://sulangsss.github.io/2018/12/12/Linux/Configuration/Startup/"/>
    <id>https://sulangsss.github.io/2018/12/12/Linux/Configuration/Startup/</id>
    <published>2018-12-12T08:01:22.000Z</published>
    <updated>2018-12-12T13:37:26.560Z</updated>
    
    <content type="html"><![CDATA[<h3 id="etc-init-d"><a href="#etc-init-d" class="headerlink" title="/etc/init.d/"></a>/etc/init.d/</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /etc/init.d/start_my_app /etc/rc.d/</span><br></pre></td></tr></table></figure><h3 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@reboot  /home/user/test.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;etc-init-d&quot;&gt;&lt;a href=&quot;#etc-init-d&quot; class=&quot;headerlink&quot; title=&quot;/etc/init.d/&quot;&gt;&lt;/a&gt;/etc/init.d/&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="Linux" scheme="https://sulangsss.github.io/categories/Linux/"/>
    
      <category term="Configuration" scheme="https://sulangsss.github.io/categories/Linux/Configuration/"/>
    
    
      <category term="Linux" scheme="https://sulangsss.github.io/tags/Linux/"/>
    
      <category term="Startup" scheme="https://sulangsss.github.io/tags/Startup/"/>
    
  </entry>
  
  <entry>
    <title>Effective Tools</title>
    <link href="https://sulangsss.github.io/2018/12/12/Software/EffectiveTool/"/>
    <id>https://sulangsss.github.io/2018/12/12/Software/EffectiveTool/</id>
    <published>2018-12-12T03:01:22.000Z</published>
    <updated>2018-12-12T05:47:32.848Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>Joplin</li></ul><h3 id="Message"><a href="#Message" class="headerlink" title="Message"></a>Message</h3><ul><li>IFTTT</li></ul><blockquote><p>IFTTT 是 If This Then That 的缩写，它是一个新生的网络服务平台。通俗的来讲，IFTTT 的作用就是如果触发了一件事，则执行设定好的另一件事。所谓的「事」，指的是各种应用、服务之间可以进行有趣的连锁反应。IFTTT 的宗旨是 Put the internet to work for you （让互联网为你服务）。用户可以在 IFTTT 里设定任何一个你需要的条件，当条件达到时，便会触发下一个指定好的动作。它就像是一座神奇的桥梁，能连接我们日常所用的各种网络服务。</p></blockquote><blockquote><p>举个例子：在你每天订阅的RSS（Feedly）里，如果你觉得一篇文章很好，你会给它加上星标（Favorite）以便下次查询或者浏览，但如果你想把每一次加过星标的文章自动存入你的 Evernote （印象笔记）里呢？使用 IFTTT ，通过简单的设定，就能很好的完成这个流程，即：RSS feed → Favorite → IFTTT → Evernote。一次设定后就会一劳永逸，当然，这只是 IFTTT 中一点微不足道的功能。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Note&quot;&gt;&lt;a href=&quot;#Note&quot; class=&quot;headerlink&quot; title=&quot;Note&quot;&gt;&lt;/a&gt;Note&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Joplin&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Message&quot;&gt;&lt;a href=&quot;#Message&quot; cl
      
    
    </summary>
    
      <category term="Software" scheme="https://sulangsss.github.io/categories/Software/"/>
    
    
      <category term="EffectiveTools" scheme="https://sulangsss.github.io/tags/EffectiveTools/"/>
    
      <category term="Software" scheme="https://sulangsss.github.io/tags/Software/"/>
    
  </entry>
  
  <entry>
    <title>Kryo Configuration</title>
    <link href="https://sulangsss.github.io/2018/12/11/Java/Kryo/Configuration/"/>
    <id>https://sulangsss.github.io/2018/12/11/Java/Kryo/Configuration/</id>
    <published>2018-12-11T09:40:03.000Z</published>
    <updated>2018-12-12T06:49:39.150Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Reuse-Object-Pools"><a href="#Reuse-Object-Pools" class="headerlink" title="Reuse Object Pools"></a>Reuse Object Pools</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  一般对象</span></span><br><span class="line">kryo.register(Event::class.java, object : FieldSerializer&lt;Event&gt;(kryo, Event::class.java) &#123;</span><br><span class="line">    <span class="function">override fun <span class="title">create</span><span class="params">(kryo: Kryo?, input: Input?, type: Class&lt;Event&gt;?)</span>: Event </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Pools.borrow(Event::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">//  <span class="title">List</span>对象</span></span><br><span class="line"> kryo.register(ReferenceArrayList::class.java, object :CollectionSerializer() &#123;</span><br><span class="line">    <span class="function">override fun <span class="title">create</span><span class="params">(kryo: Kryo?, input: Input?, type: Class&lt;MutableCollection&lt;Any?&gt;&gt;?)</span>: MutableCollection&lt;Any?&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Pools.borrow(ReferenceArrayList::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>) <span class="title">as</span> <span class="title">ReferenceArrayList</span>&lt;<span class="title">Any</span>&gt;</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Reuse-Object-Pools&quot;&gt;&lt;a href=&quot;#Reuse-Object-Pools&quot; class=&quot;headerlink&quot; title=&quot;Reuse Object Pools&quot;&gt;&lt;/a&gt;Reuse Object Pools&lt;/h3&gt;&lt;figure c
      
    
    </summary>
    
      <category term="Java" scheme="https://sulangsss.github.io/categories/Java/"/>
    
      <category term="Kryo" scheme="https://sulangsss.github.io/categories/Java/Kryo/"/>
    
    
      <category term="Java" scheme="https://sulangsss.github.io/tags/Java/"/>
    
      <category term="Configuration" scheme="https://sulangsss.github.io/tags/Configuration/"/>
    
      <category term="Kryo" scheme="https://sulangsss.github.io/tags/Kryo/"/>
    
  </entry>
  
  <entry>
    <title>HTTP,HTTPS代理原理</title>
    <link href="https://sulangsss.github.io/2018/12/09/Network/HTTP/HTTP,HTTPS%E4%BB%A3%E7%90%86%E5%8E%9F%E7%90%86/"/>
    <id>https://sulangsss.github.io/2018/12/09/Network/HTTP/HTTP,HTTPS代理原理/</id>
    <published>2018-12-09T02:52:18.000Z</published>
    <updated>2018-12-13T10:14:20.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTTP代理"><a href="#HTTP代理" class="headerlink" title="HTTP代理"></a>HTTP代理</h2><h3 id="代理原理"><a href="#代理原理" class="headerlink" title="代理原理"></a>代理原理</h3><p>HTTP代理服务器会自动提取请求数据包的HTTP Request数据，并且把HTTP Response的数据转发给发送请求的客户端；HTTP代理服务器使用的端口通常是8080。</p><img src="/2018/12/09/Network/HTTP/HTTP,HTTPS代理原理/http-proxy-1.jpg"><ul><li>对于Web客户端来说，代理扮演的服务器角色，接收请求（Request），返回响应（Response）</li><li>对于Web服务器来说，代理扮演的客户端角色，发送请求（Request），接收响应（Response）</li></ul><h3 id="代理步骤"><a href="#代理步骤" class="headerlink" title="代理步骤"></a>代理步骤</h3><ol><li>用户向代理发起TCP连接；</li><li>代理接收用户的连接，双方建立连接；</li><li>用户向代理发送HTTP请求，请求内容和没有HTTP代理的内容完全相同；</li><li>代理解析HTTP请求；</li><li>代理向服务器发起TCP连接；</li><li>服务器接收代理的连接；</li><li>代理向服务器发送HTTP请求（这个HTTP请求是基于用户的HTTP请求，可能会有修改）</li><li>服务器发送响应给代理；</li><li>代理再转发响应给客户端；</li></ol><h3 id="报文对比"><a href="#报文对比" class="headerlink" title="报文对比"></a>报文对比</h3><p>HTTP请求协议（不使用代理协议）报文</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Accept: application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</span><br><span class="line">Accept-Language: zh-CN</span><br><span class="line">User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2; .NET4.0C; .NET4.0E)</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Host: www.xxxx.com</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Cookie:</span><br></pre></td></tr></table></figure><p>HTTP请求协议（使用代理协议）报文</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET http://www.xxxx.com/ HTTP/1.1</span><br><span class="line">Accept: application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</span><br><span class="line">Accept-Language: zh-CN</span><br><span class="line">User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2; .NET4.0C; .NET4.0E)</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Proxy-Connection: Keep-Alive</span><br><span class="line">Host: www.xxxx.com</span><br><span class="line">Cookie:</span><br></pre></td></tr></table></figure><p>差异点：</p><ul><li>GET</li><li>Proxy-Connection</li></ul><h3 id="HTTP-Actions"><a href="#HTTP-Actions" class="headerlink" title="HTTP Actions"></a>HTTP Actions</h3><ul><li><p>OPTIONS方法：这个方法可使服务器传回该资源所支持的所有HTTP请求方法。用’*‘来代替资源名称，向Web服务器发送OPTIONS请求，可以测试服务器功能是否正常运作。</p></li><li><p>HEAD方法：与GET方法一样，都是向服务器发出指定资源的请求。只不过服务器将不传回资源的本文部份。它的好处在于，使用这个方法可以在不必传输全部内容的情况下，就可以获取其中“关于该资源的信息”(元信息或称元数据)。</p></li><li><p>GET方法：向指定的资源发出“显示”请求。使用GET方法应该只用在读取数据，而不应当被用于产生“副作用”的操作中，例如在Web Application中。其中一个原因是GET可能会被网络蜘蛛等随意访问。参见安全方法</p></li><li><p>POST方法：向指定资源提交数据，请求服务器进行处理(例如提交表单或者上传文件)。数据被包含在请求本文中。这个请求可能会创建新的资源或修改现有资源，或二者皆有。</p></li><li><p>PUT方法：向指定资源位置上传其最新内容。</p></li><li><p>DELETE方法：请求服务器删除Request-URI所标识的资源。</p></li><li><p>TRACE方法：回显服务器收到的请求，主要用于测试或诊断。</p></li><li><p>CONNECT方法：HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接(经由非加密的HTTP代理服务器)。</p></li></ul><h4 id="CONNECT"><a href="#CONNECT" class="headerlink" title="CONNECT"></a>CONNECT</h4><p>connect方法的通常就是把服务器作为跳板机，让服务器直接代理客户端访问，然后把数据原原本本的返回给客户端，connect方法的原理就是TCP直连。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CONNECT http://www.xxxx.com:80/ HTTP/1.1</span><br><span class="line">Accept: application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</span><br><span class="line">Accept-Language: zh-CN</span><br><span class="line">User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; InfoPath.2; .NET4.0C; .NET4.0E)</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Proxy-Connection: Keep-Alive</span><br><span class="line">Host: www.xxxx.com</span><br></pre></td></tr></table></figure><h3 id="HTTP代理类型"><a href="#HTTP代理类型" class="headerlink" title="HTTP代理类型"></a>HTTP代理类型</h3><ul><li>全匿名代理，不改变客户端的request fields（请求信息），使服务器端看来就像有个真正的客户浏览器在访问。客户端的真实IP是隐藏起来的。</li><li>普通匿名代理，能隐藏客户端的真实IP，但会更改客户端的request fields（请求信息），服务器端有可能会被认为使用了代理。</li><li>透明代理（简单代理），改变客户端的request fields（请求信息），并会传送真实IP地址。</li></ul><hr><h2 id="HTTPS代理"><a href="#HTTPS代理" class="headerlink" title="HTTPS代理"></a>HTTPS代理</h2><h3 id="代理原理-1"><a href="#代理原理-1" class="headerlink" title="代理原理"></a>代理原理</h3><p>HTTPS代理有多种做法，通常使用CONNECT method，通过proxy建立一条隧道(隧道代理)，这样proxy无法解密数据；此外，还有一种类似于中间人攻击的代理手法。</p><h3 id="代理步骤-1"><a href="#代理步骤-1" class="headerlink" title="代理步骤"></a>代理步骤</h3><img src="/2018/12/09/Network/HTTP/HTTP,HTTPS代理原理/https-proxy-1.jpg"><ul><li>用户向代理发起CONNECT请求；</li><li>代理向Targe发起TCP连接请求；</li><li>代理向用户返回”HTTP/1.0 OK”，隧道建立完成；</li><li>代理转发用户的数据给Target，转发Target的数据给用户，直到任何一方连接结束；</li></ul><h3 id="TLS-MIM-man-in-the-middle-中间人攻击"><a href="#TLS-MIM-man-in-the-middle-中间人攻击" class="headerlink" title="TLS MIM(man in the middle 中间人攻击)"></a>TLS MIM(man in the middle 中间人攻击)</h3><p>正常情况下浏览器与服务器在TLS链接下内容是加密的，第三方即使可以嗅探到所有的数据，也不能解密。</p><p>中间人可以与你建立链接，然后中间人再与服务器建立链接，转发你们之间的内容。这时候中间人就获得了明文的信息。</p><h4 id="如何防范？如果确定是否被攻击？"><a href="#如何防范？如果确定是否被攻击？" class="headerlink" title="如何防范？如果确定是否被攻击？"></a>如何防范？如果确定是否被攻击？</h4><p>在访问https链接的时候，查看一下服务器提供的证书是不是正确的。除非入侵并取得服务器的证书私钥，否则中间人是不能完全伪装成服务器的样子的。</p><h4 id="为什么这么多人呼吁删除CNNIC-ROOT-CA？"><a href="#为什么这么多人呼吁删除CNNIC-ROOT-CA？" class="headerlink" title="为什么这么多人呼吁删除CNNIC ROOT CA？"></a>为什么这么多人呼吁删除CNNIC ROOT CA？</h4><h4 id="HTTP-Public-Key-Pinning（HPKP）"><a href="#HTTP-Public-Key-Pinning（HPKP）" class="headerlink" title="HTTP Public Key Pinning（HPKP）"></a>HTTP Public Key Pinning（HPKP）</h4><p>用来防范由「伪造或不正当手段获得网站证书」造成的中间人攻击</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><blockquote><p><a href="https://lilywei739.github.io/2017/01/25/principle_for_http_https.html" target="_blank" rel="noopener">https://lilywei739.github.io/2017/01/25/principle_for_http_https.html</a><br>HTTP Public Key Pinning 介绍: <a href="https://imququ.com/post/http-public-key-pinning.html" target="_blank" rel="noopener">https://imququ.com/post/http-public-key-pinning.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTTP代理&quot;&gt;&lt;a href=&quot;#HTTP代理&quot; class=&quot;headerlink&quot; title=&quot;HTTP代理&quot;&gt;&lt;/a&gt;HTTP代理&lt;/h2&gt;&lt;h3 id=&quot;代理原理&quot;&gt;&lt;a href=&quot;#代理原理&quot; class=&quot;headerlink&quot; title=&quot;代
      
    
    </summary>
    
      <category term="Network" scheme="https://sulangsss.github.io/categories/Network/"/>
    
      <category term="HTTP" scheme="https://sulangsss.github.io/categories/Network/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://sulangsss.github.io/tags/HTTP/"/>
    
      <category term="Proxy" scheme="https://sulangsss.github.io/tags/Proxy/"/>
    
      <category term="Network" scheme="https://sulangsss.github.io/tags/Network/"/>
    
      <category term="HTTPS" scheme="https://sulangsss.github.io/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>Git Books</title>
    <link href="https://sulangsss.github.io/2018/12/09/Books/Git/"/>
    <id>https://sulangsss.github.io/2018/12/09/Books/Git/</id>
    <published>2018-12-09T02:52:18.000Z</published>
    <updated>2018-12-09T03:01:25.680Z</updated>
    
    <content type="html"><![CDATA[<p>pro-git:<a href="https://progit.bootcss.com/" target="_blank" rel="noopener">https://progit.bootcss.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pro-git:&lt;a href=&quot;https://progit.bootcss.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://progit.bootcss.com/&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Book" scheme="https://sulangsss.github.io/categories/Book/"/>
    
    
      <category term="Books" scheme="https://sulangsss.github.io/tags/Books/"/>
    
      <category term="Git" scheme="https://sulangsss.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>HTTP Books</title>
    <link href="https://sulangsss.github.io/2018/12/09/Books/HTTP/"/>
    <id>https://sulangsss.github.io/2018/12/09/Books/HTTP/</id>
    <published>2018-12-09T02:52:18.000Z</published>
    <updated>2018-12-09T03:02:35.293Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTTP</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/HTTP&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developer.mozilla.org/zh-CN/docs/Web/H
      
    
    </summary>
    
      <category term="Book" scheme="https://sulangsss.github.io/categories/Book/"/>
    
    
      <category term="HTTP" scheme="https://sulangsss.github.io/tags/HTTP/"/>
    
      <category term="Books" scheme="https://sulangsss.github.io/tags/Books/"/>
    
  </entry>
  
</feed>
