<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sulang blog</title>
  
  <subtitle>python java android django web</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sulangsss.github.io/"/>
  <updated>2018-11-15T02:13:49.555Z</updated>
  <id>https://sulangsss.github.io/</id>
  
  <author>
    <name>sulang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Searching Skills</title>
    <link href="https://sulangsss.github.io/2018/11/15/CS/Searching-Skills/"/>
    <id>https://sulangsss.github.io/2018/11/15/CS/Searching-Skills/</id>
    <published>2018-11-15T02:48:18.000Z</published>
    <updated>2018-11-15T02:13:49.555Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h3><ul><li>“”：以某个短语所为搜索关键词，表示完全匹配，结果中必须出现与搜索文本完全相同的内容</li><li>‘’：排除某个关键词</li><li>A -B：搜索包含A但不包含B的结果（请注意A后面的空格不能省略）</li><li>filetype：例如：中国防火墙 filetype:ppt，即为搜索包含主题中国防火墙的ppt文件。（请注意使用英文的冒号）</li><li>site：在某个网站内搜索，比如：site:<a href="http://pan.baidu.com" target="_blank" rel="noopener">http://pan.baidu.com</a> 特别好用，用来搜百度云里的资源。</li><li>link：搜索网页中含有某链接的结果，比如搜索：link:<a href="http://baidu.com，则结果为包含百度这个链接的页面。" target="_blank" rel="noopener">http://baidu.com，则结果为包含百度这个链接的页面。</a></li><li>intitle：搜索标题内包含关键词的结果。</li><li>inurl：搜索网站地址中包含关键词的结果。</li><li>related：搜索相关网站。</li><li>index of：可以突破网站入口下载。</li><li>模糊搜索：比如长*墙</li><li>define：pronto 快速查找单词含义</li><li>999 RMB = ? USD：单位换算</li><li>weather location：天气情况，比如 weather chengdu</li></ul><img src="/2018/11/15/CS/Searching-Skills/google-searching-skills.jpg"><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Skills&quot;&gt;&lt;a href=&quot;#Skills&quot; class=&quot;headerlink&quot; title=&quot;Skills&quot;&gt;&lt;/a&gt;Skills&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;“”：以某个短语所为搜索关键词，表示完全匹配，结果中必须出现与搜索文本完全相同的内容&lt;/li&gt;

      
    
    </summary>
    
      <category term="CS" scheme="https://sulangsss.github.io/categories/CS/"/>
    
    
      <category term="Searching" scheme="https://sulangsss.github.io/tags/Searching/"/>
    
  </entry>
  
  <entry>
    <title>Nginx Location Resource</title>
    <link href="https://sulangsss.github.io/2018/11/14/Nginx/Basic/Location-Resouce/"/>
    <id>https://sulangsss.github.io/2018/11/14/Nginx/Basic/Location-Resouce/</id>
    <published>2018-11-14T05:28:19.000Z</published>
    <updated>2018-11-14T05:54:25.943Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Nginx" scheme="https://sulangsss.github.io/categories/Nginx/"/>
    
      <category term="Basic" scheme="https://sulangsss.github.io/categories/Nginx/Basic/"/>
    
    
      <category term="Nginx" scheme="https://sulangsss.github.io/tags/Nginx/"/>
    
      <category term="Resource" scheme="https://sulangsss.github.io/tags/Resource/"/>
    
  </entry>
  
  <entry>
    <title>WireGuard</title>
    <link href="https://sulangsss.github.io/2018/11/13/CS/Network/WireGuard/"/>
    <id>https://sulangsss.github.io/2018/11/13/CS/Network/WireGuard/</id>
    <published>2018-11-13T13:28:19.000Z</published>
    <updated>2018-11-14T02:24:31.245Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Office-Site"><a href="#Office-Site" class="headerlink" title="Office Site"></a>Office Site</h3><p><a href="https://www.wireguard.com/" target="_blank" rel="noopener">https://www.wireguard.com/</a></p><h3 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h3><h4 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h4><p><strong>Install</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install software-properties-common</span><br><span class="line">add-apt-repository ppa:wireguard/wireguard</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install wireguard-dkms wireguard-tools</span><br></pre></td></tr></table></figure><p><strong>Configure Server</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Interface]</span><br><span class="line">PrivateKey = <span class="variable">$s1</span></span><br><span class="line">Address = 10.0.0.1/24 </span><br><span class="line">PostUp   = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</span><br><span class="line">PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE</span><br><span class="line">ListenPort = <span class="variable">$port</span></span><br><span class="line">DNS = 8.8.8.8</span><br><span class="line">MTU = 1420</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = <span class="variable">$c2</span></span><br><span class="line">AllowedIPs = 10.0.0.2/32</span><br></pre></td></tr></table></figure><p><strong>Configure Client</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/wireguard/client.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Interface]</span><br><span class="line">PrivateKey = <span class="variable">$c1</span></span><br><span class="line">Address = 10.0.0.2/24 </span><br><span class="line">DNS = 8.8.8.8</span><br><span class="line">MTU = 1420</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = <span class="variable">$s2</span></span><br><span class="line">Endpoint = <span class="variable">$serverip</span>:<span class="variable">$port</span></span><br><span class="line">AllowedIPs = 0.0.0.0/0, ::0/0</span><br><span class="line">PersistentKeepalive = 25</span><br></pre></td></tr></table></figure><p><strong>Start</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo wg-quick up wg0</span><br><span class="line"><span class="comment"># status</span></span><br><span class="line">sudo wg</span><br></pre></td></tr></table></figure><h3 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h3><h4 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">brew install wireguard-tools jq</span><br><span class="line"></span><br><span class="line"><span class="comment"># Turn on </span></span><br><span class="line">wg-quick up config.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Turn Off</span></span><br><span class="line">wg-quick down config.conf</span><br></pre></td></tr></table></figure><ul><li><a href="https://tunsafe.com/" target="_blank" rel="noopener">https://tunsafe.com/</a></li></ul><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p><a href="https://10to7.xyz/setup-wireguard-on-ubuntu-18-04-and-android-oero/" target="_blank" rel="noopener">https://10to7.xyz/setup-wireguard-on-ubuntu-18-04-and-android-oero/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Office-Site&quot;&gt;&lt;a href=&quot;#Office-Site&quot; class=&quot;headerlink&quot; title=&quot;Office Site&quot;&gt;&lt;/a&gt;Office Site&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.wireguard.com
      
    
    </summary>
    
      <category term="Network" scheme="https://sulangsss.github.io/categories/Network/"/>
    
    
      <category term="Network" scheme="https://sulangsss.github.io/tags/Network/"/>
    
      <category term="WireGuard" scheme="https://sulangsss.github.io/tags/WireGuard/"/>
    
  </entry>
  
  <entry>
    <title>Nginx Introduction</title>
    <link href="https://sulangsss.github.io/2018/11/13/Nginx/Basic/Introduction/"/>
    <id>https://sulangsss.github.io/2018/11/13/Nginx/Basic/Introduction/</id>
    <published>2018-11-13T05:28:19.000Z</published>
    <updated>2018-11-14T05:37:12.665Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h3><ul><li>binary module</li><li>conf</li><li>access.log</li><li>error.log</li></ul><h3 id="Open-Source-Framework"><a href="#Open-Source-Framework" class="headerlink" title="Open Source Framework"></a>Open Source Framework</h3><ul><li>OpenRestry</li><li>Nginx</li><li>Nginx Plus</li></ul><h3 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h3><h3 id="Grammar"><a href="#Grammar" class="headerlink" title="Grammar"></a>Grammar</h3><ul><li>配置文件由指令与指令块构成</li><li>每条指令以 “;” 结尾，指令与参数之间以空格符分割</li><li>指令块以 “{}” 将多条指令组织在一起</li><li>include语句允许组合多个配置文件，便于维护</li><li>“#” 注释语句</li><li>“$” 使用变量</li><li>部分指令的参数支持正则表达式</li></ul><h4 id="Instruct-block"><a href="#Instruct-block" class="headerlink" title="Instruct block"></a>Instruct block</h4><ul><li>http</li><li>server</li><li>upstream</li><li>location</li></ul><h4 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h4><ul><li>nginx -s reload</li><li>-c 指定配置文件</li><li>-g 指定配置指令，比如覆盖指令</li><li>-p 指定运行目录</li><li>-s stop/quit/reload/reopen(重新开始记录日志文件) 发送信号 </li><li>-t/T 检查配置文件</li><li>-v/V 查看版本 </li><li>kill -USR2 pid 热更新替换binary，路径不变，覆盖文件</li></ul><h4 id="Time-Unit"><a href="#Time-Unit" class="headerlink" title="Time Unit"></a>Time Unit</h4><p>ms，s，m，h，d，w，m (30 days)，y (365 days)</p><h4 id="Storage-Unit"><a href="#Storage-Unit" class="headerlink" title="Storage Unit"></a>Storage Unit</h4><p>如果不添加以下单位，默认是bytes</p><p>k/K，m/M，g/G</p><h3 id="Doc"><a href="#Doc" class="headerlink" title="Doc"></a>Doc</h3><blockquote><p>OpenResty 最佳实践 - <a href="https://moonbingbing.gitbooks.io/openresty-best-practices/content/" target="_blank" rel="noopener">https://moonbingbing.gitbooks.io/openresty-best-practices/content/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Components&quot;&gt;&lt;a href=&quot;#Components&quot; class=&quot;headerlink&quot; title=&quot;Components&quot;&gt;&lt;/a&gt;Components&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;binary module&lt;/li&gt;
&lt;li&gt;conf&lt;/li&gt;
      
    
    </summary>
    
      <category term="Nginx" scheme="https://sulangsss.github.io/categories/Nginx/"/>
    
      <category term="Basic" scheme="https://sulangsss.github.io/categories/Nginx/Basic/"/>
    
    
      <category term="Nginx" scheme="https://sulangsss.github.io/tags/Nginx/"/>
    
      <category term="Introduction" scheme="https://sulangsss.github.io/tags/Introduction/"/>
    
  </entry>
  
  <entry>
    <title>Zipkin</title>
    <link href="https://sulangsss.github.io/2018/11/12/SpringBoot/DistributedTracing/Zipkin/"/>
    <id>https://sulangsss.github.io/2018/11/12/SpringBoot/DistributedTracing/Zipkin/</id>
    <published>2018-11-12T04:48:18.000Z</published>
    <updated>2018-11-13T05:40:47.932Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introdction"><a href="#Introdction" class="headerlink" title="Introdction"></a>Introdction</h3><p><strong>Components</strong></p><blockquote><ul><li>Collector：收集器组件，它主要用于处理从外部系统发送过来的跟踪信息，将这些信息转换为Zipkin内部处理的Span格式，以支持后续的存储、分析、展示等功能。</li><li>Storage：存储组件，它主要对处理收集器接收到的跟踪信息，默认会将这些信息存储在内存中，我们也可以修改此存储策略，通过使用其他存储组件将跟踪信息存储到数据库中。</li><li>RESTful API：API组件，它主要用来提供外部访问接口。比如给客户端展示跟踪信息，或是外接系统访问以实现监控等。</li><li>Web UI：UI组件，基于API组件实现的上层应用。通过UI组件用户可以方便而有直观地查询和分析跟踪信息。</li></ul></blockquote><p><strong>Term</strong></p><blockquote><ul><li>span：跟踪系统中的基本数据单元。</li><li>traceId：全局跟踪ID，用它来标记一次完整服务调用，所以和一次服务调用相关的span中的traceId都是相同的，Zipkin将具有相同traceId的span组装成跟踪树来直观的将调用链路图展现在我们面前。</li></ul></blockquote><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p><a href="https://segmentfault.com/a/1190000013343959" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013343959</a><br>RocketMQ - <a href="http://blueskykong.com/2018/06/25/stream-2/" target="_blank" rel="noopener">http://blueskykong.com/2018/06/25/stream-2/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Introdction&quot;&gt;&lt;a href=&quot;#Introdction&quot; class=&quot;headerlink&quot; title=&quot;Introdction&quot;&gt;&lt;/a&gt;Introdction&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Components&lt;/strong&gt;&lt;/p&gt;
&lt;b
      
    
    </summary>
    
      <category term="Distributed Tracing" scheme="https://sulangsss.github.io/categories/Distributed-Tracing/"/>
    
    
      <category term="DistributedTracing" scheme="https://sulangsss.github.io/tags/DistributedTracing/"/>
    
      <category term="Zipkin" scheme="https://sulangsss.github.io/tags/Zipkin/"/>
    
  </entry>
  
  <entry>
    <title>Bloom Filter</title>
    <link href="https://sulangsss.github.io/2018/11/12/Arithmetic/Bloom-Filter/"/>
    <id>https://sulangsss.github.io/2018/11/12/Arithmetic/Bloom-Filter/</id>
    <published>2018-11-12T04:13:06.000Z</published>
    <updated>2018-11-12T04:30:47.609Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h3><ul><li>空间效率高的概率型数据结构，用来检查一个元素是否在一个集合中</li><li>对于一个元素检测是否存在的调用，BloomFilter会告诉调用者两个结果之一：可能存在或者一定不存在</li></ul><hr><h3 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h3><p>BloomFilter通常采用bit array实现，假设其bit总数为m，初始化时m个bit都被置成0。</p><p>BloomFilter中插入一个元素，会使用k个hash函数，来计算出k个在bit array中的位置，然后，将bit array中这些位置的bit都置为1。</p><p>以一个例子，来说明添加的过程，这里，假设m=19，k=2，如下：</p><img src="/2018/11/12/Arithmetic/Bloom-Filter/bloom_filter_insert.png"><p>如上图，插入了两个元素，X和Y，X的两次hash取模后的值分别为4,9，因此，4和9位被置成1；Y的两次hash取模后的值分别为14和19，因此，14和19位被置成1。</p><p>BloomFilter中查找一个元素，会使用和插入过程中相同的k个hash函数，取模后，取出每个bit对应的值，如果所有bit都为1，则返回元素可能存在，否则，返回元素不存在。</p><p><strong>请注意：为什么bit全部为1时，是表示元素可能存在呢？</strong></p><p>还是以上图的例子说明</p><ul><li>假如，要查找一个元素Z，其hash计算出来的位置为9,14，此时，BloomFilter认为此元素存在，但是，Z实际上是不存在的(因为这两个位置因为插入X 和 Y设置成1)，此现象称为false positive。</li></ul><p>最后，BloomFilter中不允许有删除操作，因为删除后，可能会造成原来存在的元素返回不存在，这个是不允许的，还是以一个例子说明：</p><img src="/2018/11/12/Arithmetic/Bloom-Filter/bloom_filter_delete.png"><p>当删除X后，会把bit 4和9置成0，这同时会造成查询Z时，报不存在的问题，这对于BloomFilter来讲是不能容忍的，因为它要么返回绝对不存在，要么返回可能存在。</p><p>loomFilter中不允许删除的机制会导致其中的无效元素可能会越来越多，即实际已经删除的元素，但在bloomfilter中还认为可能存在，这会造成越来越多的false positive，在实际使用中，一般会废弃原来的BloomFilter，重新构建一个新的BloomFilter。</p><h4 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h4><blockquote><p><a href="http://oserror.com/backend/bloomfilter/" target="_blank" rel="noopener">http://oserror.com/backend/bloomfilter/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Function&quot;&gt;&lt;a href=&quot;#Function&quot; class=&quot;headerlink&quot; title=&quot;Function&quot;&gt;&lt;/a&gt;Function&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;空间效率高的概率型数据结构，用来检查一个元素是否在一个集合中&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="Arithmetic" scheme="https://sulangsss.github.io/categories/Arithmetic/"/>
    
    
      <category term="Arithmetic" scheme="https://sulangsss.github.io/tags/Arithmetic/"/>
    
      <category term="Bloom Filter" scheme="https://sulangsss.github.io/tags/Bloom-Filter/"/>
    
  </entry>
  
  <entry>
    <title>供给侧改革</title>
    <link href="https://sulangsss.github.io/2018/11/12/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E4%BE%9B%E7%BB%99%E4%BE%A7%E6%94%B9%E9%9D%A9/"/>
    <id>https://sulangsss.github.io/2018/11/12/读书笔记/供给侧改革/</id>
    <published>2018-11-12T04:07:07.000Z</published>
    <updated>2018-11-12T04:03:11.378Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Example&quot;&gt;&lt;a href=&quot;#Example&quot; class=&quot;headerlink&quot; title=&quot;Example&quot;&gt;&lt;/a&gt;Example&lt;/h3&gt;
      
    
    </summary>
    
      <category term="读书笔记" scheme="https://sulangsss.github.io/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://sulangsss.github.io/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="供给侧改革" scheme="https://sulangsss.github.io/tags/%E4%BE%9B%E7%BB%99%E4%BE%A7%E6%94%B9%E9%9D%A9/"/>
    
  </entry>
  
  <entry>
    <title>Tracing Comparison</title>
    <link href="https://sulangsss.github.io/2018/11/12/SpringBoot/DistributedTracing/TracingComparison/"/>
    <id>https://sulangsss.github.io/2018/11/12/SpringBoot/DistributedTracing/TracingComparison/</id>
    <published>2018-11-12T03:48:18.000Z</published>
    <updated>2018-11-13T03:12:43.902Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><ul><li>cat</li><li>zipkin</li><li>pinpoint</li><li>skywalking</li></ul><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p><a href="https://blog.csdn.net/u012394095/article/details/79700200" target="_blank" rel="noopener">https://blog.csdn.net/u012394095/article/details/79700200</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Solution&quot;&gt;&lt;a href=&quot;#Solution&quot; class=&quot;headerlink&quot; title=&quot;Solution&quot;&gt;&lt;/a&gt;Solution&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;cat&lt;/li&gt;
&lt;li&gt;zipkin&lt;/li&gt;
&lt;li&gt;pinpoint&lt;/l
      
    
    </summary>
    
      <category term="Distributed Tracing" scheme="https://sulangsss.github.io/categories/Distributed-Tracing/"/>
    
    
      <category term="DistributedTracing" scheme="https://sulangsss.github.io/tags/DistributedTracing/"/>
    
  </entry>
  
  <entry>
    <title>Brave</title>
    <link href="https://sulangsss.github.io/2018/11/12/SpringBoot/DistributedTracing/Brave/"/>
    <id>https://sulangsss.github.io/2018/11/12/SpringBoot/DistributedTracing/Brave/</id>
    <published>2018-11-12T03:48:18.000Z</published>
    <updated>2018-11-13T03:30:35.367Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>Brave 是用来装备 Java 程序的类库，提供了面向 Standard Servlet、Spring MVC、Http Client、JAX RS、Jersey、Resteasy 和 MySQL 等接口的装备能力，可以通过编写简单的配置和代码，让基于这些框架构建的应用可以向 Zipkin 报告数据。同时 Brave 也提供了非常简单且标准化的接口，在以上封装无法满足要求的时候可以方便扩展与定制。</p><h3 id="Practice"><a href="#Practice" class="headerlink" title="Practice"></a>Practice</h3><h4 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h4><ul><li>默认情况下，Brave不会将收集到的监控数据发送给 Zipkin 服务器，而是会以日志的形式打印到控制台。可以考虑使用FileBeats收集</li></ul><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/20941369" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/20941369</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h3&gt;&lt;p&gt;Brave 是用来装备 Java 程序的类库，提供了面向 S
      
    
    </summary>
    
      <category term="Distributed Tracing" scheme="https://sulangsss.github.io/categories/Distributed-Tracing/"/>
    
    
      <category term="DistributedTracing" scheme="https://sulangsss.github.io/tags/DistributedTracing/"/>
    
      <category term="Brave" scheme="https://sulangsss.github.io/tags/Brave/"/>
    
  </entry>
  
  <entry>
    <title>GCP Peering</title>
    <link href="https://sulangsss.github.io/2018/11/11/Kubenetes/GCP/Peering/"/>
    <id>https://sulangsss.github.io/2018/11/11/Kubenetes/GCP/Peering/</id>
    <published>2018-11-11T08:39:06.000Z</published>
    <updated>2018-11-11T10:25:51.762Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CIDR计算"><a href="#CIDR计算" class="headerlink" title="CIDR计算"></a>CIDR计算</h3><p>128.14.35.7/20 = 10000000  00001110  0010|0011  00000111</p><p>即前20位是网络前缀，后12位是主机号，那么我们通过令主机号分别为全0和全1就可以得到一个CIDR地址块的最小地址和最大地址，即</p><p>最小地址是：128.14.32.0    = 10000000  00001110  00100000  00000000<br>最大地址是：128.14.47.255  = 10000000  00001110  00101111  11111111<br>子网掩码是：255.255.240.0  = 11111111  11111111  11110000  00000000 </p><blockquote><p><a href="https://blog.csdn.net/dan15188387481/article/details/49873923" target="_blank" rel="noopener">https://blog.csdn.net/dan15188387481/article/details/49873923</a></p></blockquote><h3 id="不同项目之间的Peering连接"><a href="#不同项目之间的Peering连接" class="headerlink" title="不同项目之间的Peering连接"></a>不同项目之间的Peering连接</h3><h4 id="Private-Cluster"><a href="#Private-Cluster" class="headerlink" title="Private Cluster"></a>Private Cluster</h4><p>两个可以进行peering的项目的network，如下：</p><p>A 项目</p><ul><li>networkt：10.128.0.0/20</li></ul><p>B 项目</p><ul><li>networkt：10.132.0.0/20</li></ul><p>两者地址对比<br>A：00001010 10000000 0000|0000 00000000<br>B：00001010 10000100 0000|0000 00000000</p><p>其中00001010 10000100 0000部分是网络号，00000 00000000是主机号</p><p>由此可知，如果两个Private Cluster的项目想建立Peering，网络号必须不同。</p><p>如果subnetwork地址范围是192.168.1.0/24，填写pod地址时候提示 Enter a valid range within 10.0.0.0/8, 172.16.0.0/12 or 192.168.0.0/16</p><p>Pod/Service地址范围至少是21位网络号</p><p>10.0.0.0/21 可用范围</p><p>网络号范围 10.0.0.0 ~ 10.255.248.0<br>第一个主机号范围 10.0.0.0 ~ 10.0.7.0</p><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p><a href="https://cloud.google.com/vpc/docs/vpc#vpc_networks_and_subnets" target="_blank" rel="noopener">https://cloud.google.com/vpc/docs/vpc#vpc_networks_and_subnets</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CIDR计算&quot;&gt;&lt;a href=&quot;#CIDR计算&quot; class=&quot;headerlink&quot; title=&quot;CIDR计算&quot;&gt;&lt;/a&gt;CIDR计算&lt;/h3&gt;&lt;p&gt;128.14.35.7/20 = 10000000  00001110  0010|0011  000001
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://sulangsss.github.io/categories/Kubernetes/"/>
    
      <category term="GCP" scheme="https://sulangsss.github.io/categories/Kubernetes/GCP/"/>
    
    
      <category term="Kubernetes" scheme="https://sulangsss.github.io/tags/Kubernetes/"/>
    
      <category term="GCP" scheme="https://sulangsss.github.io/tags/GCP/"/>
    
      <category term="Peering" scheme="https://sulangsss.github.io/tags/Peering/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Slow Query</title>
    <link href="https://sulangsss.github.io/2018/11/11/Database/MySQL/Slow-Query/"/>
    <id>https://sulangsss.github.io/2018/11/11/Database/MySQL/Slow-Query/</id>
    <published>2018-11-11T07:13:06.000Z</published>
    <updated>2018-11-11T07:48:08.978Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Enable-Slow-Query"><a href="#Enable-Slow-Query" class="headerlink" title="Enable Slow Query"></a>Enable Slow Query</h3><h4 id="MariaDB"><a href="#MariaDB" class="headerlink" title="MariaDB"></a>MariaDB</h4><p>开启了慢查询日志只对当前数据库生效，如果重启后则会失效。如果要永久生效，就必须修改配置文件my.cnf</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span>  <span class="keyword">like</span> <span class="string">'%slow_query_log%'</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> slow_query_log=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">slow_query_logON</span><br><span class="line">slow_query_log_file/var/log/mysql/mariadb-slow.log</span><br></pre></td></tr></table></figure><h3 id="mysqldumpslow"><a href="#mysqldumpslow" class="headerlink" title="mysqldumpslow"></a>mysqldumpslow</h3><ul><li>t：返回前面多少条的数据</li><li>g：一个正则匹配模式，大小写不敏感</li><li>c：访问计数</li><li>l：锁定时间</li><li>r：返回记录</li><li>t：查询时间</li><li>al：平均锁定时间</li><li>ar：平均返回记录数</li><li>at：平均查询时间</li></ul><h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#得到返回记录集最多的10个SQL。</span></span><br><span class="line"></span><br><span class="line">mysqldumpslow -s r -t 10 log_path</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到访问次数最多的10个SQL</span></span><br><span class="line"></span><br><span class="line">mysqldumpslow -s c -t 10 log_path</span><br><span class="line"></span><br><span class="line"><span class="comment">#得到按照时间排序的前10条里面含有左连接的查询语句。</span></span><br><span class="line"></span><br><span class="line">mysqldumpslow -s t -t 10 -g “left join” log_path</span><br><span class="line"></span><br><span class="line"><span class="comment">#另外建议在使用这些命令时结合 | 和more 使用 ，否则有可能出现刷屏的情况。</span></span><br></pre></td></tr></table></figure><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p>MySQL慢查询日志总结 <a href="http://www.cnblogs.com/kerrycode/p/5593204.html" target="_blank" rel="noopener">http://www.cnblogs.com/kerrycode/p/5593204.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Enable-Slow-Query&quot;&gt;&lt;a href=&quot;#Enable-Slow-Query&quot; class=&quot;headerlink&quot; title=&quot;Enable Slow Query&quot;&gt;&lt;/a&gt;Enable Slow Query&lt;/h3&gt;&lt;h4 id=&quot;Maria
      
    
    </summary>
    
      <category term="DB" scheme="https://sulangsss.github.io/categories/DB/"/>
    
      <category term="MySQL" scheme="https://sulangsss.github.io/categories/DB/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://sulangsss.github.io/tags/MySQL/"/>
    
      <category term="SlowQuery" scheme="https://sulangsss.github.io/tags/SlowQuery/"/>
    
  </entry>
  
  <entry>
    <title>Kuberntes PV PVC</title>
    <link href="https://sulangsss.github.io/2018/11/09/Kubenetes/PV-And-PVC/"/>
    <id>https://sulangsss.github.io/2018/11/09/Kubenetes/PV-And-PVC/</id>
    <published>2018-11-09T06:01:22.000Z</published>
    <updated>2018-11-09T07:05:08.967Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PVC"><a href="#PVC" class="headerlink" title="PVC"></a>PVC</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql-volumeclaim</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 200Gi</span><br></pre></td></tr></table></figure><h3 id="volume"><a href="#volume" class="headerlink" title="volume"></a>volume</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: mysql</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: mysql</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - image: mysql:5.6</span><br><span class="line">          name: mysql</span><br><span class="line">          ports:</span><br><span class="line">            - containerPort: 3306</span><br><span class="line">              name: mysql</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: mysql-persistent-storage</span><br><span class="line">              mountPath: /var/lib/mysql</span><br><span class="line">      volumes:</span><br><span class="line">        - name: mysql-persistent-storage</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            claimName: mysql-volumeclaim</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PVC&quot;&gt;&lt;a href=&quot;#PVC&quot; class=&quot;headerlink&quot; title=&quot;PVC&quot;&gt;&lt;/a&gt;PVC&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp
      
    
    </summary>
    
      <category term="Kuberntes" scheme="https://sulangsss.github.io/categories/Kuberntes/"/>
    
    
      <category term="Kuberntes" scheme="https://sulangsss.github.io/tags/Kuberntes/"/>
    
      <category term="PV" scheme="https://sulangsss.github.io/tags/PV/"/>
    
      <category term="PVC" scheme="https://sulangsss.github.io/tags/PVC/"/>
    
  </entry>
  
  <entry>
    <title>certbot docker Let&#39;s Encrypt</title>
    <link href="https://sulangsss.github.io/2018/11/09/Nginx/certbot/"/>
    <id>https://sulangsss.github.io/2018/11/09/Nginx/certbot/</id>
    <published>2018-11-09T05:33:06.000Z</published>
    <updated>2018-11-09T06:09:27.156Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Step"><a href="#Step" class="headerlink" title="Step"></a>Step</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm -p 80:80 -p 443:443 \</span><br><span class="line">    -v $(<span class="built_in">pwd</span>)/letsencrypt:/etc/letsencrypt \</span><br><span class="line">    quay.io/letsencrypt/letsencrypt auth</span><br></pre></td></tr></table></figure><p>运行成功后，如下提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">How would you like to authenticate with the ACME CA?</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">1: Spin up a temporary webserver (standalone)</span><br><span class="line">2: Place files <span class="keyword">in</span> webroot directory (webroot)</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Select the appropriate number [1-2] <span class="keyword">then</span> [enter] (press <span class="string">'c'</span> to cancel):</span><br></pre></td></tr></table></figure><p>选择1，然后输入Email地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Plugins selected: Authenticator standalone, Installer None</span><br><span class="line">Enter email address (used <span class="keyword">for</span> urgent renewal and security notices) (Enter <span class="string">'c'</span> to</span><br><span class="line">cancel):</span><br></pre></td></tr></table></figure><p>同意协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br><span class="line">Please <span class="built_in">read</span> the Terms of Service at</span><br><span class="line">https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must</span><br><span class="line">agree <span class="keyword">in</span> order to register with the ACME server at</span><br><span class="line">https://acme-v02.api.letsencrypt.org/directory</span><br><span class="line">- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -</span><br></pre></td></tr></table></figure><p>最后接着输入你的domain，然后生成证书</p><h3 id="One-Step"><a href="#One-Step" class="headerlink" title="One Step"></a>One Step</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -p 80:80 -p 443:443 \</span><br><span class="line">    -v $(<span class="built_in">pwd</span>)/letsencrypt:/etc/letsencrypt \</span><br><span class="line">    quay.io/letsencrypt/letsencrypt auth \</span><br><span class="line">    --standalone -m someone@email.com --agree-tos \</span><br><span class="line">    -d your.domain1.com -d your.domain2.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Step&quot;&gt;&lt;a href=&quot;#Step&quot; class=&quot;headerlink&quot; title=&quot;Step&quot;&gt;&lt;/a&gt;Step&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
      <category term="Nginx" scheme="https://sulangsss.github.io/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://sulangsss.github.io/tags/Nginx/"/>
    
      <category term="certbot" scheme="https://sulangsss.github.io/tags/certbot/"/>
    
      <category term="HTTPS" scheme="https://sulangsss.github.io/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud Api Gateway Error</title>
    <link href="https://sulangsss.github.io/2018/11/08/SpringBoot/API-Gateway/Error/"/>
    <id>https://sulangsss.github.io/2018/11/08/SpringBoot/API-Gateway/Error/</id>
    <published>2018-11-08T15:00:06.000Z</published>
    <updated>2018-11-09T07:13:01.582Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Unable-to-start-reactive-web"><a href="#Unable-to-start-reactive-web" class="headerlink" title="Unable to start reactive web"></a>Unable to start reactive web</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Unable-to-start-reactive-web&quot;&gt;&lt;a href=&quot;#Unable-to-start-reactive-web&quot; class=&quot;headerlink&quot; title=&quot;Unable to start reactive web&quot;&gt;&lt;/a&gt;Un
      
    
    </summary>
    
      <category term="SpringBoot" scheme="https://sulangsss.github.io/categories/SpringBoot/"/>
    
      <category term="ApiGateway" scheme="https://sulangsss.github.io/categories/SpringBoot/ApiGateway/"/>
    
    
      <category term="Error" scheme="https://sulangsss.github.io/tags/Error/"/>
    
      <category term="SpringBoot" scheme="https://sulangsss.github.io/tags/SpringBoot/"/>
    
      <category term="ApiGateway" scheme="https://sulangsss.github.io/tags/ApiGateway/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud Api Gateway 跨域问题</title>
    <link href="https://sulangsss.github.io/2018/11/08/SpringBoot/API-Gateway/CORS/"/>
    <id>https://sulangsss.github.io/2018/11/08/SpringBoot/API-Gateway/CORS/</id>
    <published>2018-11-08T15:00:06.000Z</published>
    <updated>2018-11-09T07:12:57.460Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><h3 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">fun <span class="title">allowCORS</span><span class="params">()</span>: WebFilter </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> WebFilter &#123; webExchange, chains -&gt;</span><br><span class="line">            val request = webExchange.request</span><br><span class="line">            val requestHeaders = request.headers</span><br><span class="line">            val response = webExchange.response</span><br><span class="line">            val respHeaders = response.headers</span><br><span class="line"></span><br><span class="line">            respHeaders.add(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, <span class="string">"*"</span>)</span><br><span class="line">            respHeaders.add(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, <span class="string">"*"</span>)</span><br><span class="line">            respHeaders.add(HttpHeaders.ACCESS_CONTROL_MAX_AGE, MAX_AGE)</span><br><span class="line">            respHeaders.addAll(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, requestHeaders.accessControlRequestHeaders)</span><br><span class="line">            respHeaders.add(HttpHeaders.ACCESS_CONTROL_EXPOSE_HEADERS, <span class="string">"*"</span>)</span><br><span class="line">            respHeaders.add(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, <span class="string">"true"</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (request.method == HttpMethod.OPTIONS) &#123;</span><br><span class="line">                response.statusCode = HttpStatus.OK</span><br><span class="line">                Mono.empty()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                chains.filter(webExchange)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    companion object &#123;</span><br><span class="line">        <span class="keyword">const</span> val MAX_AGE = <span class="string">"18000L"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p><a href="http://springcloud.cn/view/343" target="_blank" rel="noopener">http://springcloud.cn/view/343</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;Java&lt;/h3&gt;&lt;h3 id=&quot;Kotlin&quot;&gt;&lt;a href=&quot;#Kotlin&quot; class=&quot;headerlink&quot; title=&quot;Kotli
      
    
    </summary>
    
      <category term="SpringBoot" scheme="https://sulangsss.github.io/categories/SpringBoot/"/>
    
      <category term="ApiGateway" scheme="https://sulangsss.github.io/categories/SpringBoot/ApiGateway/"/>
    
    
      <category term="SpringBoot" scheme="https://sulangsss.github.io/tags/SpringBoot/"/>
    
      <category term="CORS" scheme="https://sulangsss.github.io/tags/CORS/"/>
    
      <category term="ApiGateway" scheme="https://sulangsss.github.io/tags/ApiGateway/"/>
    
  </entry>
  
  <entry>
    <title>Eureka Conf</title>
    <link href="https://sulangsss.github.io/2018/11/08/SpringBoot/Eureka/conf/"/>
    <id>https://sulangsss.github.io/2018/11/08/SpringBoot/Eureka/conf/</id>
    <published>2018-11-08T04:13:06.000Z</published>
    <updated>2018-11-08T04:16:52.312Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p><a href="https://yq.aliyun.com/articles/138261" target="_blank" rel="noopener">https://yq.aliyun.com/articles/138261</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Refer&quot;&gt;&lt;a href=&quot;#Refer&quot; class=&quot;headerlink&quot; title=&quot;Refer&quot;&gt;&lt;/a&gt;Refer&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://yq.aliyun.com/articles/13826
      
    
    </summary>
    
      <category term="Server" scheme="https://sulangsss.github.io/categories/Server/"/>
    
    
      <category term="Server" scheme="https://sulangsss.github.io/tags/Server/"/>
    
      <category term="Conf" scheme="https://sulangsss.github.io/tags/Conf/"/>
    
      <category term="Eureka" scheme="https://sulangsss.github.io/tags/Eureka/"/>
    
  </entry>
  
  <entry>
    <title>Attribute</title>
    <link href="https://sulangsss.github.io/2018/11/07/Kubenetes/Deployment-Attribute/"/>
    <id>https://sulangsss.github.io/2018/11/07/Kubenetes/Deployment-Attribute/</id>
    <published>2018-11-07T02:13:06.000Z</published>
    <updated>2018-11-09T07:14:45.110Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: <span class="built_in">command</span>-demo</span><br><span class="line">  labels:</span><br><span class="line">    purpose: demonstrate-command</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: <span class="built_in">command</span>-demo-container</span><br><span class="line">    image: debian</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">"printenv"</span>]</span><br><span class="line">    args: [<span class="string">"HOSTNAME"</span>, <span class="string">"KUBERNETES_PORT"</span>]</span><br><span class="line">  restartPolicy: OnFailure</span><br></pre></td></tr></table></figure><h3 id="Access-Modes"><a href="#Access-Modes" class="headerlink" title="Access Modes"></a>Access Modes</h3><ul><li>ReadWriteOnce – the volume can be mounted as read-write by a single node</li><li>ReadOnlyMany – the volume can be mounted read-only by many nodes</li><li>ReadWriteMany – the volume can be mounted as read-write by many nodes</li></ul><p>In the CLI, the access modes are abbreviated to:</p><ul><li>RWO - ReadWriteOnce</li><li>ROX - ReadOnlyMany</li><li>RWX - ReadWriteMany</li></ul><h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><h3 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h3><p><strong>应用场景</strong></p><ul><li>Stable, unique network identifiers.</li><li>Stable, persistent storage.</li><li>Ordered, graceful deployment and scaling.</li><li>Ordered, automated rolling updates.</li></ul><h4 id="updateStrategy"><a href="#updateStrategy" class="headerlink" title="updateStrategy"></a>updateStrategy</h4><p>spec.updateStrategy.type</p><ul><li>OnDelete：不会自动更新StatefulSet中的Pod，用户必须手动删除Pods以使控制器创建新的Pod。</li><li>RollingUpdate：删除并重新创建StatefulSet中的每个Pod。它将以与Pod终止相同的顺序进行（从最大的序数到最小的顺序）来更新每个Pod。</li></ul><p>spe.updateStrategy.rollingUpdate.partition 金丝雀策略</p><h4 id="volumeClaimTemplates"><a href="#volumeClaimTemplates" class="headerlink" title="volumeClaimTemplates"></a>volumeClaimTemplates</h4><ul><li>persistentVolume：用来向真正的存储服务器申请真正的存储资源的一个object，至于这个存储资源谁来用，那就是接下来说的pvc的职责所在。</li><li>persistentVolumeClaim：用来关联pv和pod的一个桥梁。</li></ul><p>通过volumeClaimTemplates关联创建PV，volumeMounts使用PV</p><h3 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h3><blockquote><p><a href="http://docs.kubernetes.org.cn/" target="_blank" rel="noopener">http://docs.kubernetes.org.cn/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Command&quot;&gt;&lt;a href=&quot;#Command&quot; class=&quot;headerlink&quot; title=&quot;Command&quot;&gt;&lt;/a&gt;Command&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="Kubernetes" scheme="https://sulangsss.github.io/categories/Kubernetes/"/>
    
    
      <category term="Kubernetes" scheme="https://sulangsss.github.io/tags/Kubernetes/"/>
    
      <category term="Attribute" scheme="https://sulangsss.github.io/tags/Attribute/"/>
    
  </entry>
  
  <entry>
    <title>HTTP Hijack</title>
    <link href="https://sulangsss.github.io/2018/11/06/CS/Network/HTTP-Hijack/"/>
    <id>https://sulangsss.github.io/2018/11/06/CS/Network/HTTP-Hijack/</id>
    <published>2018-11-06T05:28:19.000Z</published>
    <updated>2018-11-11T07:01:55.394Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>而HTTP劫持很容易解决，那就是加上SSL证书，网站链接全部内容加密，这样“检查站：墙”就无法解密数据分析关键词了。但是这不是绝对能解决这个问题的，如果你的网站只是误杀或者违规擦边球，那还好，如果是大型网站，就会特殊对待了。</p><p>HTTPS在建立加密连接的时候，需要一次握手，也就是达成链接协议建立加密连接，但是这次握手是明文的（建立加密链接首先就是链接双方信任，比如网站的SSL证书是自己签的，或者SSL证书到期或伪造的，在访问这个网站的时候浏览器就会进行提示，表示此网站不安全啥的。</p><p>握手是明文的就意味着，如果你的域名被重点关注，即使你加上了SSL证书，也会在首次握手的时候，被关键词匹配然后掐断链接。还有一种方式，就是域名备案，使用国内服务器。这样用户在访问你的网站时，根本不需要经过墙，自然也没有了拦截。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Solution&quot;&gt;&lt;a href=&quot;#Solution&quot; class=&quot;headerlink&quot; title=&quot;Solution&quot;&gt;&lt;/a&gt;Solution&lt;/h3&gt;&lt;p&gt;而HTTP劫持很容易解决，那就是加上SSL证书，网站链接全部内容加密，这样“检查站：墙”就无
      
    
    </summary>
    
      <category term="CS" scheme="https://sulangsss.github.io/categories/CS/"/>
    
      <category term="Network" scheme="https://sulangsss.github.io/categories/CS/Network/"/>
    
    
      <category term="CS" scheme="https://sulangsss.github.io/tags/CS/"/>
    
      <category term="Network" scheme="https://sulangsss.github.io/tags/Network/"/>
    
      <category term="HTTP" scheme="https://sulangsss.github.io/tags/HTTP/"/>
    
      <category term="Hijack" scheme="https://sulangsss.github.io/tags/Hijack/"/>
    
  </entry>
  
  <entry>
    <title>医生的修炼</title>
    <link href="https://sulangsss.github.io/2018/11/01/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E8%81%8C%E4%B8%9A/%E5%8C%BB%E7%94%9F%E7%9A%84%E4%BF%AE%E7%82%BC/"/>
    <id>https://sulangsss.github.io/2018/11/01/读书笔记/职业/医生的修炼/</id>
    <published>2018-11-01T05:38:18.000Z</published>
    <updated>2018-11-01T05:44:39.128Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="职业" scheme="https://sulangsss.github.io/categories/%E8%81%8C%E4%B8%9A/"/>
    
    
      <category term="职业" scheme="https://sulangsss.github.io/tags/%E8%81%8C%E4%B8%9A/"/>
    
      <category term="医生的修炼" scheme="https://sulangsss.github.io/tags/%E5%8C%BB%E7%94%9F%E7%9A%84%E4%BF%AE%E7%82%BC/"/>
    
  </entry>
  
  <entry>
    <title>LLVM</title>
    <link href="https://sulangsss.github.io/2018/11/01/CS/Compiler/LLVM/"/>
    <id>https://sulangsss.github.io/2018/11/01/CS/Compiler/LLVM/</id>
    <published>2018-11-01T02:31:19.000Z</published>
    <updated>2018-11-06T05:21:27.594Z</updated>
    
    <content type="html"><![CDATA[<h3 id="What’s-LLVM"><a href="#What’s-LLVM" class="headerlink" title="What’s LLVM"></a>What’s LLVM</h3><p>LLVM is Low Level Virtual Machine.</p><p>LLVM可以被看作是一系列的编译器和工具链技术的集合，而且它们是模块化并且是可重用的。</p><p>原话是：<strong>The LLVM Project is a collection of modular and reusable compiler and toolchain technologies.</strong></p><p><strong>特性</strong></p><ul><li>LLVM的“中间表示”（IR）是一项大创新。LLVM的程序表示方法真的“可读”（如果你会读汇编）。虽然看上去这没什么要紧，但要知道，其他编译器的中间表示大多是种内存中的复杂数据结构，以至于很难写出来，这让其他编译器既难懂又难以实现。</li><li>然而LLVM并非如此。其架构远比其他编译器要模块化得多。这种优点可能部分来自于它的最初实现者。</li><li>尽管LLVM给我们这些狂热的学术黑客提供了一种研究工具的选择，它还是一款有大公司做后台的工业级编译器。这意味着你不需要去在“强大的编译器”和“可玩的编译器”之间做妥协——不像你在Java世界中必须在HotSpot和Jikes之间权衡那样。</li></ul><p><strong>特别注意：LLVM不是只用来实现编译优化的！</strong></p><h3 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h3><p>LLVM架构的主要组成部分如下（事实上也是所有现代编译器架构）：</p><p><strong>前端 -&gt; 流程（Pass) -&gt; 后端</strong></p><img src="/2018/11/01/CS/Compiler/LLVM/components.png"><ul><li><p>前端获取你的源代码然后将它转变为某种中间表示。这种翻译简化了编译器其他部分的工作，这样它们就不需要面对比如C++源码的所有复杂性了。作为一个豪迈人，你很可能不想再做这部分工作；可以不加改动地使用Clang来完成。</p></li><li><p>“流程”将程序在中间表示之间互相变换。一般情况下，流程也用来优化代码：流程输出的（中间表示）程序和它输入的（中间表示）程序相比在功能上完全相同，只是在性能上得到改进。这部分通常是给你发挥的地方。你的研究工具可以通过观察和修改编译过程流中的IR来完成任务。</p></li><li><p>后端部分可以生成实际运行的机器码。你几乎肯定不想动这部分了。</p></li></ul><p>虽然当今大多数编译器都使用了这种架构，但是LLVM有一点值得注意而与众不同：整个过程中，程序都使用了同一种中间表示。在其他编译器中，可能每一个流程产出的代码都有一种独特的格式。LLVM在这一点上对hackers大为有利。我们不需要担心我们的改动该插在哪个位置，只要放在前后端之间某个地方就足够了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;What’s-LLVM&quot;&gt;&lt;a href=&quot;#What’s-LLVM&quot; class=&quot;headerlink&quot; title=&quot;What’s LLVM&quot;&gt;&lt;/a&gt;What’s LLVM&lt;/h3&gt;&lt;p&gt;LLVM is Low Level Virtual Machine.
      
    
    </summary>
    
      <category term="CS" scheme="https://sulangsss.github.io/categories/CS/"/>
    
    
      <category term="CS" scheme="https://sulangsss.github.io/tags/CS/"/>
    
      <category term="LLVM" scheme="https://sulangsss.github.io/tags/LLVM/"/>
    
  </entry>
  
</feed>
